"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[8475],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>m});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),p=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},c=function(e){var a=p(e.components);return n.createElement(l.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(t),m=r,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||s;return t?n.createElement(f,o(o({ref:a},c),{},{components:t})):n.createElement(f,o({ref:a},c))}));function m(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=u;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<s;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4966:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=t(7462),r=(t(7294),t(3905));const s={sidebar_position:1.1},o="Primeros Pasos",i={unversionedId:"es/tools/lsp-factoryjs/getting-started",id:"es/tools/lsp-factoryjs/getting-started",title:"Primeros Pasos",description:"El paquete @lukso/lsp-factory.js permite implementaciones sencillas de ERC725-UniversalProfiles, LSP7-DigitalAssets y LSP8-IdentifiableDigitalAssets.",source:"@site/docs/es/tools/lsp-factoryjs/getting-started.md",sourceDirName:"es/tools/lsp-factoryjs",slug:"/es/tools/lsp-factoryjs/getting-started",permalink:"/lukso-es/en/es/tools/lsp-factoryjs/getting-started",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/es/tools/lsp-factoryjs/getting-started.md",tags:[],version:"current",lastUpdatedAt:1680495619,formattedLastUpdatedAt:"Apr 3, 2023",sidebarPosition:1.1,frontMatter:{sidebar_position:1.1},sidebar:"toolsSidebar",previous:{title:"ERC725",permalink:"/lukso-es/en/es/tools/erc725js/classes/ERC725"},next:{title:"Perfil Universal",permalink:"/lukso-es/en/es/tools/lsp-factoryjs/deployment/universal-profile"}},l={},p=[{value:"Instalaci\xf3n",id:"instalaci\xf3n",level:2},{value:"Instanciaci\xf3n",id:"instanciaci\xf3n",level:2},{value:"Uso de LSPFactory en una dApp",id:"uso-de-lspfactory-en-una-dapp",level:2},{value:"Uso",id:"uso",level:2},{value:"Opciones",id:"opciones",level:2},{value:"Id de cadena",id:"id-de-cadena",level:4},{value:"Pasarela IPFS",id:"pasarela-ipfs",level:4}],c={toc:p};function d(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"primeros-pasos"},"Primeros Pasos"),(0,r.kt)("p",null,"El paquete ",(0,r.kt)("inlineCode",{parentName:"p"},"@lukso/lsp-factory.js")," permite implementaciones sencillas de ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},"ERC725-UniversalProfiles"),", ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-7-DigitalAsset.md"},"LSP7-DigitalAssets")," y ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-8-IdentifiableDigitalAsset.md"},"LSP8-IdentifiableDigitalAssets"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/tools-lsp-factory"},"Repositorio GitHub")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@lukso/lsp-factory.js"},"Paquete NPM"))),(0,r.kt)("h2",{id:"instalaci\xf3n"},"Instalaci\xf3n"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @lukso/lsp-factory.js\n")),(0,r.kt)("h2",{id:"instanciaci\xf3n"},"Instanciaci\xf3n"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { LSPFactory } from '@lukso/lsp-factory.js';\n\nconst provider = 'https://rpc.l16.lukso.network';\n\nconst lspFactory = new LSPFactory(provider, {\n  deployKey: '0x...', // Clave privada de la cuenta que desplegar\xe1 los contratos inteligentes\n  chainId: 2828,\n});\n")),(0,r.kt)("h2",{id:"uso-de-lspfactory-en-una-dapp"},"Uso de LSPFactory en una dApp"),(0,r.kt)("p",null,"Si se utiliza en el navegador desde la p\xe1gina de una dApp, hay que pasar el objeto ethereum como par\xe1metro de proveedor para conectar con una extensi\xf3n del navegador como la extensi\xf3n de navegador UniversalProfile o MetaMask. La extensi\xf3n de navegador pedir\xe1 a los usuarios que firmen las transacciones a medida que ",(0,r.kt)("strong",{parentName:"p"},"LSPFactory")," despliega los contratos inteligentes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"await ethereum.request({ method: 'eth_requestAccounts', params: [] });\n\nconst lspFactory = new LSPFactory(ethereum, {\n  chainId: 2828,\n});\n")),(0,r.kt)("h2",{id:"uso"},"Uso"),(0,r.kt)("p",null,"Desplegar un perfil universal es tan sencillo como ejecutarlo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const myContracts = await lspFactory.UniversalProfile.deploy({\n  controllerAddresses: ['0x...'], // Direcciones de cuentas que controlar\xe1n el UP\n  lsp3Profile: myLSP3MetaData,\n});\n")),(0,r.kt)("p",null,"La clave ",(0,r.kt)("inlineCode",{parentName:"p"},"lsp3Profile")," contiene los ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md#JSONURL"},"Metadatos LSP3"),' de tu Perfil Universal. Esta es la "cara" de tu Perfil Universal y contiene toda la informaci\xf3n p\xfablica que la gente ver\xe1 cuando vean tu UP, tales como tu nombre, descripci\xf3n e imagen de perfil.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const myLSP3MetaData = {\n  name: 'Mi Perfil Universal',\n  description: 'My fant\xe1stico Perfil Universal',\n  profileImage: [\n    {\n      width: 500,\n      height: 500,\n      hashFunction: 'keccak256(bytes)',\n      // bytes32 cadena hexadecimal del hash de la imagen\n      hash: '0xfdafad027ecfe57eb4ad047b938805d1dec209d6e9f960fc320d7b9b11cbed14',\n      url: 'ipfs://QmPLqMFHxiUgYAom3Zg4SiwoxDaFcZpHXpCmiDzxrtjSGp',\n    },\n  ],\n  backgroundImage: [\n    {\n      width: 500,\n      height: 500,\n      hashFunction: 'keccak256(bytes)',\n      // bytes32 cadena hexadecimal del hash de la imagen\n      hash: '0xfdafad027ecfe57eb4ad047b938805d1dec209d6e9f960fc320d7b9b11cbed14',\n      url: 'ipfs://QmPLqMFHxiUgYAom3Zg4SiwoxDaFcZpHXpCmiDzxrtjSGp',\n    },\n  ],\n  tags: ['perfil p\xfablico', 'creador'],\n  links: [\n    {\n      title: 'Mi Sitio web',\n      url: 'www.mi-sitioweb.com',\n    },\n  ],\n  ...\n};\n")),(0,r.kt)("p",null,"Al desplegar tu Perfil Universal, tus datos LSP3 se cargar\xe1n autom\xe1ticamente en IPFS."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Si ya tiene cargados datos LSP3, puede pasar una URL IPFS:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const myLSP3MetaData = 'ipfs://QmPzUfdKhY6vfcTNDnitwKnnpm5GqjYSmw9todNVmi4bqy';\n"))),(0,r.kt)("p",null,"Para crear un Perfil Universal an\xf3nimo, omite el valor ",(0,r.kt)("inlineCode",{parentName:"p"},"lsp3Profile"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Los perfiles an\xf3nimos tambi\xe9n pueden ser \xfatiles si m\xe1s tarde quieres crear los metadatos LSP3.")),(0,r.kt)("p",null,"Ahora puedes seguir utilizando tu direcci\xf3n UP dentro de la dApp:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const myUPAddress = myContracts.LSP0ERC725Account.address;\n")),(0,r.kt)("h2",{id:"opciones"},"Opciones"),(0,r.kt)("p",null,"Al instanciar LSPFactory se pueden pasar opciones para especificar par\xe1metros como ",(0,r.kt)("inlineCode",{parentName:"p"},"chainId")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"ipfsGateway"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Instanciaci\xf3n de LSPFactory con opciones personalizadas"',title:'"Instanciaci\xf3n',de:!0,LSPFactory:!0,con:!0,opciones:!0,'personalizadas"':!0},"const lspFactory = new LSPFactory('https://rpc.l16.lukso.network', {\n  deployKey: '0x...',\n  chainId: 2828,\n  ipfsGateway: 'https://ipfs.infura.io:5001',\n});\n")),(0,r.kt)("p",null,"####Clave de Despliegue"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"deployKey")," es la clave privada que debe firmar las transacciones enviadas por LSPFactory. Esta cuenta debe tener suficiente gas para realizar las transacciones."),(0,r.kt)("p",null,"Si no se establece ning\xfan valor aqu\xed, LSPFactory intentar\xe1 firmar las transacciones a trav\xe9s de una extensi\xf3n del navegador."),(0,r.kt)("h4",{id:"id-de-cadena"},"Id de cadena"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"chainId")," se utiliza para especificar la red con la que LSPFactory est\xe1 interactuando. El ",(0,r.kt)("inlineCode",{parentName:"p"},"chainId")," proporcionado se utilizar\xe1 para determinar qu\xe9 contratos base utilizar cuando se utilice ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/en/es/tools/lsp-factoryjs/deployment/options#deploy-proxy"},"despliegue proxy"),". Las direcciones de contratos base desplegados previamente se almacenan en el ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/tools-lsp-factory/blob/main/src/versions.json"},"archivo de versiones")," y se accede a ellas usando el chainId proporcionado. El valor predeterminado es 22 (l14 testnet)."),(0,r.kt)("h4",{id:"pasarela-ipfs"},"Pasarela IPFS"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ipfsGateway")," se utiliza para especificar el nodo IPFS con el que se debe interactuar para cargar y recuperar metadatos. ",(0,r.kt)("inlineCode",{parentName:"p"},"ipfsGateway")," puede ser una cadena URL o un objeto definido por la librer\xeda ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs-http-client#createoptions"},"IPFS-HTTP Client")," que se utiliza internamente para interactuar con el nodo IPFS."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Instanciaci\xf3n de LSPFactory con opciones ipfsGateway personalizadas establecidas"',title:'"Instanciaci\xf3n',de:!0,LSPFactory:!0,con:!0,opciones:!0,ipfsGateway:!0,personalizadas:!0,'establecidas"':!0},"const lspFactory = new LSPFactory('https://rpc.l16.lukso.network', {\n  deployKey: '0x...',\n  chainId: 2828,\n  ipfsGateway: {\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https',\n  },\n});\n")))}d.isMDXComponent=!0}}]);