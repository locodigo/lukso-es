"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[4432],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),k=s(a),c=r,u=k["".concat(p,".").concat(c)]||k[c]||m[c]||i;return a?n.createElement(u,o(o({ref:t},d),{},{components:a})):n.createElement(u,o({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=k;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},1300:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const i={title:"LSP0ERC725Account",sidebar_position:4},o="LSP0ERC725Account",l={unversionedId:"es/standards/smart-contracts/lsp0-erc725-account",id:"es/standards/smart-contracts/lsp0-erc725-account",title:"LSP0ERC725Account",description:"LSP0ERC725Account.sol",source:"@site/docs/es/standards/smart-contracts/lsp0-erc725-account.md",sourceDirName:"es/standards/smart-contracts",slug:"/es/standards/smart-contracts/lsp0-erc725-account",permalink:"/lukso-es/en/es/standards/smart-contracts/lsp0-erc725-account",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/es/standards/smart-contracts/lsp0-erc725-account.md",tags:[],version:"current",lastUpdatedAt:1680197874,formattedLastUpdatedAt:"Mar 30, 2023",sidebarPosition:4,frontMatter:{title:"LSP0ERC725Account",sidebar_position:4},sidebar:"standardsSidebar",previous:{title:"ERC725",permalink:"/lukso-es/en/es/standards/smart-contracts/erc725-contract"},next:{title:"LSP1ReceptorDelegadoUniversalUP",permalink:"/lukso-es/en/es/standards/smart-contracts/lsp1-universal-receiver-delegate-up"}},p={},s=[{value:"Functions",id:"functions",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"receive",id:"receive",level:3},{value:"fallback",id:"fallback",level:3},{value:"supportsInterface",id:"supportsinterface",level:3},{value:"owner",id:"owner",level:3},{value:"Return Values:",id:"return-values",level:4},{value:"pendingOwner",id:"pendingowner",level:3},{value:"Return Values:",id:"return-values-1",level:4},{value:"transferOwnership",id:"transferownership",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"acceptOwnership",id:"acceptownership",level:3},{value:"renounceOwnership",id:"renounceownership",level:3},{value:"execute",id:"execute",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Return Values:",id:"return-values-2",level:4},{value:"execute (Array)",id:"execute-array",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Return Values:",id:"return-values-3",level:4},{value:"setData",id:"setdata",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"getData",id:"getdata",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"Return Values:",id:"return-values-4",level:4},{value:"setData (Array)",id:"setdata-array",level:3},{value:"Parameters:",id:"parameters-6",level:4},{value:"getData (Array)",id:"getdata-array",level:3},{value:"Parameters:",id:"parameters-7",level:4},{value:"Return Values:",id:"return-values-5",level:4},{value:"universalReceiver",id:"universalreceiver",level:3},{value:"Parameters:",id:"parameters-8",level:4},{value:"Return Values:",id:"return-values-6",level:4},{value:"isValidSignature",id:"isvalidsignature",level:3},{value:"Parameters:",id:"parameters-9",level:4},{value:"Return Values:",id:"return-values-7",level:4},{value:"Events",id:"events",level:2},{value:"OwnershipTransferStarted",id:"ownershiptransferstarted",level:3},{value:"Values:",id:"values",level:4},{value:"OwnershipTransferred",id:"ownershiptransferred",level:3},{value:"Values:",id:"values-1",level:4},{value:"RenounceOwnershipStarted",id:"renounceownershipstarted",level:3},{value:"OwnershipRenounced",id:"ownershiprenounced",level:3},{value:"ValueReceived",id:"valuereceived",level:3},{value:"Values:",id:"values-2",level:4},{value:"Executed",id:"executed",level:3},{value:"Values:",id:"values-3",level:4},{value:"ContractCreated",id:"contractcreated",level:3},{value:"Values:",id:"values-4",level:4},{value:"DataChanged",id:"datachanged",level:3},{value:"Values:",id:"values-5",level:4},{value:"UniversalReceiver",id:"universalreceiver-1",level:3},{value:"Values:",id:"values-6",level:4},{value:"References",id:"references",level:2}],d={toc:s};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"lsp0erc725account"},"LSP0ERC725Account"),(0,r.kt)("admonition",{title:"Solidity contract",type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/main/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol"},(0,r.kt)("inlineCode",{parentName:"a"},"LSP0ERC725Account.sol")))),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," contract is an implementation for the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"../universal-profile/lsp0-erc725account"},"LSP0-ERC725Account Standard")),". This contract forms a ",(0,r.kt)("strong",{parentName:"p"},"Universal Profile")," when combined with ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-3-UniversalProfile-Metadata.md"},"LSP3-UniversalProfile-Metadata Standard")),"."),(0,r.kt)("p",null,"This contract could be used as a ",(0,r.kt)("em",{parentName:"p"},"blockchain-based account")," by humans, machines, organizations, or even other smart contracts. It has all the basic functionalities of an ",(0,r.kt)("em",{parentName:"p"},"Externally Owned Account")," (EOA), as well as the following functions that give the contract additional features:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#execute"},(0,r.kt)("inlineCode",{parentName:"a"},"execute(...)"))," : enables to execute functions on other contracts, transfer value, or deploy new contracts."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#isvalidsignature"},(0,r.kt)("inlineCode",{parentName:"a"},"isValidSignature(...)")),": delivers verification of signatures and signed messages from EOAs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#universalreceiver"},(0,r.kt)("inlineCode",{parentName:"a"},"universalReceiver(...)")),": brings notification of incoming calls and assets."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#setdata"},(0,r.kt)("inlineCode",{parentName:"a"},"setData(...)")),": offers to set information in the account storage.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor(address initialOwner)\n")),(0,r.kt)("p",null,"Sets the ",(0,r.kt)("strong",{parentName:"p"},"initial owner")," of the contract."),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"initialOwner")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address to set as the owner of the contract.")))),(0,r.kt)("h3",{id:"receive"},"receive"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#receive"},(0,r.kt)("strong",{parentName:"a"},"receive(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L73"},(0,r.kt)("strong",{parentName:"a"},"receive(..)"))," function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"receive() external payable\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("a",{parentName:"em",href:"#valuereceived"},(0,r.kt)("strong",{parentName:"a"},"ValueReceived")))," event when the contract receives native tokens."),(0,r.kt)("h3",{id:"fallback"},"fallback"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#fallback"},(0,r.kt)("strong",{parentName:"a"},"fallback(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L121"},(0,r.kt)("strong",{parentName:"a"},"fallback(..)"))," function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"fallback() external payable\n")),(0,r.kt)("p",null,"Executed when sending bytes data to the contract and the first 4 bytes of this data do not match any of the native available functions."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Triggers the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#valuereceived"},"ValueReceived"))," event if the call was associated with sending value.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If the data sent is ",(0,r.kt)("strong",{parentName:"p"},"shorter than 4 bytes"),", then the call should pass. For example, sending ",(0,r.kt)("inlineCode",{parentName:"p"},"0xaabbcc")," to the contract will be successful.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If the data sent is ",(0,r.kt)("strong",{parentName:"p"},"preprended with 4 zeros (0)"),", then the call should pass."),(0,r.kt)("p",{parentName:"li"},"For example, when sending value to the contract it can be associated with a message, such as ",(0,r.kt)("inlineCode",{parentName:"p"},'"Here is 1 Ether"'),", after encoding the message as bytes: ",(0,r.kt)("inlineCode",{parentName:"p"},"0x486572652069732031204574686572"),"."),(0,r.kt)("p",{parentName:"li"},"In order to make the call to the contract pass, it should be prepended with ",(0,r.kt)("inlineCode",{parentName:"p"},"bytes4(0)"),". A call to the ",(0,r.kt)("strong",{parentName:"p"},"LSP0")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"0x00000000486572652069732031204574686572")," as data ",(0,r.kt)("strong",{parentName:"p"},"will pass"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If the data sent is equal or larger to 4 bytes and is not prepended with ",(0,r.kt)("inlineCode",{parentName:"p"},"bytes4(0)"),", the following steps will be executed:"))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Query the ",(0,r.kt)("a",{parentName:"li",href:"/lukso-es/en/es/standards/universal-profile/lsp0-erc725account#erc725y---generic-key-value-store"},"storage of the LSP0"),", and check if there is an address under this following data Key:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "LSP17Extension:<bytes4>",\n  "key": "0xcee78b4094da860110960000<bytes4>",\n  "keyType": "Mapping",\n  "valueType": "address",\n  "valueContent": "Address"\n}\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"<bytes4>")," is the first 4 bytes of the data received")),(0,r.kt)("p",null,"1.1 If there is not an address stored under this data key, revert with custom error ",(0,r.kt)("inlineCode",{parentName:"p"},"NoExtensionFoundForFunctionSelector(bytes4(data))")),(0,r.kt)("p",null,"1.2 If there is an address stored under the data key, forward the ",(0,r.kt)("inlineCode",{parentName:"p"},"msg.data")," received to this address via a low level call with appending the ",(0,r.kt)("inlineCode",{parentName:"p"},"msg.sender")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"msg.value"),"as extra 52 bytes to the call."),(0,r.kt)("p",null,"2.Then return the return value received after this low level call."),(0,r.kt)("p",null,"This feature is useful for making the ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account contract extendable"),", where you can add functions to be called on the LSP0 as extensions. Check ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/en/es/standards/universal-profile/lsp0-erc725account#lsp17---contract-extension"},(0,r.kt)("strong",{parentName:"a"},"LSP17-ContractExtension"))," section in LSP0."),(0,r.kt)("h3",{id:"supportsinterface"},"supportsInterface"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("strong",{parentName:"p"},"supportsInterface(..)")," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L136"},(0,r.kt)("strong",{parentName:"a"},"supportsInterface(..)"))," function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view returns (bool)\n")),(0,r.kt)("p",null,"Returns whether the LSP0 supports the given interfaceId or not."),(0,r.kt)("p",null,"New interfaceIds can be supported even after the deployment of the ",(0,r.kt)("strong",{parentName:"p"},"LSP0"),", by setting the address of a contract that contains these extended interfaceIds under the following data key:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "LSP17Extension:<bytes4>",\n  "key": "0xcee78b4094da860110960000<bytes4>",\n  "keyType": "Mapping",\n  "valueType": "address",\n  "valueContent": "Address"\n}\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"<bytes4>")," being the ",(0,r.kt)("inlineCode",{parentName:"p"},"supportsInterface(..)")," selector in this case.")),(0,r.kt)("h3",{id:"owner"},"owner"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#owner"},(0,r.kt)("strong",{parentName:"a"},"owner(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L20"},(0,r.kt)("strong",{parentName:"a"},"owner(..)"))," inherited function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function owner() public view returns (address owner)\n")),(0,r.kt)("p",null,"Returns the address of the current owner of the contract."),(0,r.kt)("h4",{id:"return-values"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"owner")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current owner of the contract.")))),(0,r.kt)("h3",{id:"pendingowner"},"pendingOwner"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#pendingowner"},(0,r.kt)("strong",{parentName:"a"},"pendingOwner(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L20"},(0,r.kt)("strong",{parentName:"a"},"pendingOwner(..)"))," inherited function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function pendingOwner() public view returns (address)\n")),(0,r.kt)("p",null,"Return the address of the pending owner that was initiated by ",(0,r.kt)("a",{parentName:"p",href:"#transferownership"},(0,r.kt)("inlineCode",{parentName:"a"},"transferOwnership(address)")),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"NB:")," if no ownership transfer is in progress, the ",(0,r.kt)("inlineCode",{parentName:"p"},"pendingOwner")," MUST be ",(0,r.kt)("inlineCode",{parentName:"p"},"address(0)"),".")),(0,r.kt)("h4",{id:"return-values-1"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"pendingOwner")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the pending owner")))),(0,r.kt)("h3",{id:"transferownership"},"transferOwnership"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#transferownership"},(0,r.kt)("strong",{parentName:"a"},"transferOwnership(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L290"},(0,r.kt)("strong",{parentName:"a"},"transferOwnership(..)"))," function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferOwnership(address newOwner) public\n")),(0,r.kt)("p",null,"Initiate an ownership transfer by setting the ",(0,r.kt)("inlineCode",{parentName:"p"},"newOwner")," as ",(0,r.kt)("inlineCode",{parentName:"p"},"pendingOwner"),"."),(0,r.kt)("p",null,"Calls the ",(0,r.kt)("inlineCode",{parentName:"p"},"universalReceiver(..)")," function ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L328"},(0,r.kt)("strong",{parentName:"a"},"on the pending owner")),", if it supports LSP1 InterfaceId with the following typeId:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"keccak256('LSP0OwnershipTransferStarted')")," > ",(0,r.kt)("inlineCode",{parentName:"li"},"0xe17117c9d2665d1dbeb479ed8058bbebde3c50ac50e2e65619f60006caac6926"),".")),(0,r.kt)("p",null,"Requirements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Can only be called by the current owner."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"newOwner")," to be set as the ",(0,r.kt)("inlineCode",{parentName:"li"},"pendingOwner")," cannot be ",(0,r.kt)("inlineCode",{parentName:"li"},"address(this)"),".")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"newOwner")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address to set as ",(0,r.kt)("inlineCode",{parentName:"td"},"pendingOwner"),".")))),(0,r.kt)("h3",{id:"acceptownership"},"acceptOwnership"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#acceptownership"},(0,r.kt)("strong",{parentName:"a"},"acceptOwnership(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L20"},(0,r.kt)("strong",{parentName:"a"},"acceptOwnership(..)"))," inherited function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function acceptOwnership() public\n")),(0,r.kt)("p",null,"Transfers ownership of the contract to the ",(0,r.kt)("inlineCode",{parentName:"p"},"pendingOwner")," address. Can only be called by the ",(0,r.kt)("inlineCode",{parentName:"p"},"pendingOwner"),"."),(0,r.kt)("p",null,"Calls the ",(0,r.kt)("inlineCode",{parentName:"p"},"universalReceiver(..)")," function on the previous and the new ",(0,r.kt)("a",{parentName:"p",href:"#pendingOwner"},(0,r.kt)("inlineCode",{parentName:"a"},"pendingOwner")),", if it supports LSP1 InterfaceId with the following typeId:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"On the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L345"},(0,r.kt)("strong",{parentName:"a"},"previous owner")),": ",(0,r.kt)("inlineCode",{parentName:"p"},"keccak256('LSP0OwnershipTransferred_SenderNotification')")," > ",(0,r.kt)("inlineCode",{parentName:"p"},"0xa4e59c931d14f7c8a7a35027f92ee40b5f2886b9fdcdb78f30bc5ecce5a2f814"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"On the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L361"},(0,r.kt)("strong",{parentName:"a"},"new owner")),": ",(0,r.kt)("inlineCode",{parentName:"p"},"keccak256('LSP0OwnershipTransferred_RecipientNotification')")," > ",(0,r.kt)("inlineCode",{parentName:"p"},"0xceca317f109c43507871523e82dc2a3cc64dfa18f12da0b6db14f6e23f995538"),"."))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#ownershiptransferred"},"OwnershipTransferred"))," event once the new owner has claimed ownership.")),(0,r.kt)("h3",{id:"renounceownership"},"renounceOwnership"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#renounceownership"},(0,r.kt)("strong",{parentName:"a"},"renounceOwnership(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L302"},(0,r.kt)("strong",{parentName:"a"},"renounceOwnership(..)"))," function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function renounceOwnership() public\n")),(0,r.kt)("p",null,"Since renouncing ownership is a sensitive operation, it is done as a two-step process by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"renounceOwnership(..)")," twice. First to initiate the process, second as a confirmation."),(0,r.kt)("p",null,"The current block number is saved as a part of initiation because the following behaviour is wanted:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The first 100 blocks after the saved block is the pending period, if you call ",(0,r.kt)("inlineCode",{parentName:"li"},"renounceOwnership(..)")," during this period, the transaction will be reverted."),(0,r.kt)("li",{parentName:"ul"},"the following 100 blocks is the period when you can confirm the renouncement of the contract by calling ",(0,r.kt)("inlineCode",{parentName:"li"},"renounceOwnership(..)")," the second time.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#renounceownershipinitiated"},"RenounceOwnershipInitiated"))," event in the first call.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#ownershiptransferred"},"OwnershipTransferred"))," event after successfully renouncing ownership.")),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Leaves the contract without an owner. Once ownership of the contract is renounced, it won't be possible to call the functions restricted to the owner only.")),(0,r.kt)("h3",{id:"execute"},"execute"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#execute"},(0,r.kt)("strong",{parentName:"a"},"execute(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L200"},(0,r.kt)("strong",{parentName:"a"},"execute(..)"))," function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("strong",{parentName:"p"},"javascript")," guides to know ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/en/es/guides/universal-profile/transfer-lyx"},(0,r.kt)("strong",{parentName:"a"},"How to Send native tokens"))," or ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/en/es/guides/universal-profile/interact-with-contracts"},(0,r.kt)("strong",{parentName:"a"},"How to Call other contract's function"))," using the execute function.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function execute(\n    uint256 operationType,\n    address target,\n    uint256 value,\n    bytes memory data\n) public payable returns (bytes memory result)\n")),(0,r.kt)("p",null,"Executes a call on any other smart contracts, transfers value, or deploys a new smart contract."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"operationType")," can be the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"0")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"CALL")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"1")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"2")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE2")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"3")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"STATICCALL")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"4")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"DELEGATECALL"))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#valuereceived"},"ValueReceived"))," event when a the call is associated with value.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#executed"},"Executed"))," event when a call is successfully executed using ",(0,r.kt)("inlineCode",{parentName:"em"},"CALL/STATICCALL/DELEGATECALL")," operations.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#contractcreated"},"ContractCreated"))," event when a smart contract is created using ",(0,r.kt)("inlineCode",{parentName:"em"},"CREATE/CREATE2")," operations.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"execute(...)")," function can only be called by the current owner of the contract."),(0,r.kt)("p",{parentName:"admonition"},"The operation types ",(0,r.kt)("inlineCode",{parentName:"p"},"staticcall")," (",(0,r.kt)("inlineCode",{parentName:"p"},"3"),") and ",(0,r.kt)("inlineCode",{parentName:"p"},"delegatecall")," (",(0,r.kt)("inlineCode",{parentName:"p"},"4"),") do not allow to transfer value.")),(0,r.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"operationType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The type of operation that needs to be executed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"target")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address to interact with. The address ",(0,r.kt)("inlineCode",{parentName:"td"},"to")," will be unused if a contract is created (operations 1 & 2).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of native tokens to transfer with the transaction (in Wei).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"data")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The calldata (ABI-encoded payload of a function to run on an other contract), or the bytecode of the contract to deploy.")))),(0,r.kt)("h4",{id:"return-values-2"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The data that was returned by the function called on the external contract, or the address of the contract created (operations 1 & 2).")))),(0,r.kt)("h3",{id:"execute-array"},"execute (Array)"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#execute-array"},(0,r.kt)("strong",{parentName:"a"},"execute(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L215"},(0,r.kt)("strong",{parentName:"a"},"execute(..)"))," function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function execute(\n    uint256[] memory operationsType,\n    address[] memory targets,\n    uint256[] memory values,\n    bytes[] memory memory datas\n) public payable returns (bytes memory result)\n")),(0,r.kt)("p",null,"Same as ",(0,r.kt)("a",{parentName:"p",href:"#execute---erc725x"},(0,r.kt)("inlineCode",{parentName:"a"},"execute(uint256,address,uint256,bytes)"))," but executes a batch of calls on any other smart contracts, transferring values, or deploying new smart contracts."),(0,r.kt)("p",null,"The values in the list of ",(0,r.kt)("inlineCode",{parentName:"p"},"operationsType")," can be one of the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"0")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"CALL")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"1")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"2")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"CREATE2")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"3")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"STATICCALL")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"4")," for ",(0,r.kt)("inlineCode",{parentName:"li"},"DELEGATECALL"))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#valuereceived"},"ValueReceived"))," event when a the call is associated with value.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#executed"},"Executed"))," event on every successful call that used operation type ",(0,r.kt)("inlineCode",{parentName:"em"},"CALL"),", ",(0,r.kt)("inlineCode",{parentName:"em"},"STATICCALL")," or ",(0,r.kt)("inlineCode",{parentName:"em"},"DELEGATECALL"),".")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#contractcreated"},"ContractCreated"))," event on every newly created smart contract that used operation ",(0,r.kt)("inlineCode",{parentName:"em"},"CREATE")," or ",(0,r.kt)("inlineCode",{parentName:"em"},"CREATE2"),".")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"execute(uint256[],address[],uint256[],bytes[])")," function can only be called by the current owner of the contract."),(0,r.kt)("p",{parentName:"admonition"},"The operation types ",(0,r.kt)("inlineCode",{parentName:"p"},"staticcall")," (",(0,r.kt)("inlineCode",{parentName:"p"},"3"),") and ",(0,r.kt)("inlineCode",{parentName:"p"},"delegatecall")," (",(0,r.kt)("inlineCode",{parentName:"p"},"4"),") do not allow to transfer value.")),(0,r.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"operationsType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The type of operations that need to be executed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"targets")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The addresses to interact with. Unused if a contract is created (operations 1 & 2).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"values")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of native tokens to transfer with the transaction (in Wei).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"datas")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The calldatas (ABI-encoded payloads of functions to run on other contracts), or the bytecodes of the contracts to deploy.")))),(0,r.kt)("h4",{id:"return-values-3"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"results")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The datas that were returned by the functions called on the external contracts, or the addresses of the contracts created (operations 1 & 2).")))),(0,r.kt)("h3",{id:"setdata"},"setData"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#setdata"},(0,r.kt)("strong",{parentName:"a"},"setData(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L17"},(0,r.kt)("strong",{parentName:"a"},"setData(..)"))," function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("strong",{parentName:"p"},"javascript")," guides to know ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/en/es/guides/universal-profile/edit-profile"},(0,r.kt)("strong",{parentName:"a"},"How to Edit a Profile (setData)")),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function setData(\n    bytes32 dataKey,\n    bytes memory dataValue\n) public\n")),(0,r.kt)("p",null,"Sets data in the account storage for a particular data key."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#datachanged"},"DataChanged"))," event when successfully setting the data with ",(0,r.kt)("a",{parentName:"em",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L314"},"emitting the first 256 bytes")," of the data Value.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"setData(...)")," function can only be called by the current ",(0,r.kt)("a",{parentName:"p",href:"#owner"},"owner")," of the contract.")),(0,r.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dataKey")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes32")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The data key for which the data will be set.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dataValue")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The data to be set.")))),(0,r.kt)("h3",{id:"getdata"},"getData"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#getdata"},(0,r.kt)("strong",{parentName:"a"},"getData(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L17"},(0,r.kt)("strong",{parentName:"a"},"getData(..)"))," function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("strong",{parentName:"p"},"javascript")," guides to know ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/en/es/guides/universal-profile/read-profile-data"},(0,r.kt)("strong",{parentName:"a"},"How to Read from a Profile (getData)")),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getData(bytes32 dataKey) public view returns (bytes memory dataValue)\n")),(0,r.kt)("p",null,"Retrieves the value set for the given data key."),(0,r.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dataKey")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes32")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The data key to retrieve data from.")))),(0,r.kt)("h4",{id:"return-values-4"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dataValue")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The data for the requested data key.")))),(0,r.kt)("h3",{id:"setdata-array"},"setData (Array)"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#setdata-array"},(0,r.kt)("strong",{parentName:"a"},"setData(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L17"},(0,r.kt)("strong",{parentName:"a"},"setData(..)"))," function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("strong",{parentName:"p"},"javascript")," guides to know ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/en/es/guides/universal-profile/edit-profile"},(0,r.kt)("strong",{parentName:"a"},"How to Edit a Profile (setData)")),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function setData(\n    bytes32[] memory dataKeys,\n    bytes[] memory dataValues\n) public\n")),(0,r.kt)("p",null,"Sets an array of values at multiple data keys in the account storage."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#datachanged"},"DataChanged"))," event when successfully setting each data key/value with ",(0,r.kt)("a",{parentName:"em",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L314"},"emitting the first 256 bytes")," of each data Value.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"setData(...)")," function can only be called by the current ",(0,r.kt)("a",{parentName:"p",href:"#owner"},"owner")," of the contract.")),(0,r.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dataKeys")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes32[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The data keys for which to set data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dataValues")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The array of data to set.")))),(0,r.kt)("h3",{id:"getdata-array"},"getData (Array)"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#getdata-array"},(0,r.kt)("strong",{parentName:"a"},"getData(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L17"},(0,r.kt)("strong",{parentName:"a"},"getData(..)"))," function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("strong",{parentName:"p"},"javascript")," guides to know ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/en/es/guides/universal-profile/read-profile-data"},(0,r.kt)("strong",{parentName:"a"},"How to Read from a Profile (getData)")),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getData(bytes32[] memory dataKeys) public view returns (bytes[] memory dataValues)\n")),(0,r.kt)("p",null,"Retrieves an array of values for multiple given data keys."),(0,r.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dataKeys")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes32[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The data keys to retrieve data from.")))),(0,r.kt)("h4",{id:"return-values-5"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dataValues")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes","[\xa0]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An array of the data for the requested data keys.")))),(0,r.kt)("h3",{id:"universalreceiver"},"universalReceiver"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#universalreceiver"},(0,r.kt)("strong",{parentName:"a"},"universalReceiver(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L235"},(0,r.kt)("strong",{parentName:"a"},"universalReceiver(..)"))," function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("strong",{parentName:"p"},"javascript")," guides to know ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/en/es/guides/universal-receiver-delegate/set-default-implementation"},(0,r.kt)("strong",{parentName:"a"},"How to set a UniversalReceiverDelegate built by LUKSO"))," or ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/en/es/guides/universal-receiver-delegate/accept-reject-assets"},(0,r.kt)("strong",{parentName:"a"},"How to set your own UniversalReceiverDelegate")),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function universalReceiver(\n    bytes32 typeId,\n    bytes memory data\n) public payable returns (bytes memory result)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Forwards the ",(0,r.kt)("inlineCode",{parentName:"li"},"msg.data")," appended with the ",(0,r.kt)("inlineCode",{parentName:"li"},"msg.sender")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"msg.value")," to the ",(0,r.kt)("strong",{parentName:"li"},"UniversalReceiverDelegate")," contract address stored under the data key attached below, if it supports ",(0,r.kt)("a",{parentName:"li",href:"/lukso-es/en/es/standards/smart-contracts/interface-ids"},"LSP1UniversalReceiver InterfaceId"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "LSP1UniversalReceiverDelegate",\n  "key": "0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47",\n  "keyType": "Singleton",\n  "valueType": "address",\n  "valueContent": "Address"\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Forwards the ",(0,r.kt)("inlineCode",{parentName:"li"},"msg.data")," appended with the ",(0,r.kt)("inlineCode",{parentName:"li"},"msg.sender")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"msg.value")," to the ",(0,r.kt)("strong",{parentName:"li"},"typeId delegate")," contract address stored under the data key attached below, if it supports ",(0,r.kt)("a",{parentName:"li",href:"/lukso-es/en/es/standards/smart-contracts/interface-ids"},"LSP1UniversalReceiver InterfaceId"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "LSP1UniversalReceiverDelegate:<bytes32>",\n  "key": "0x0cfc51aec37c55a4d0b10000<bytes32>",\n  "keyType": "Mapping",\n  "valueType": "address",\n  "valueContent": "Address"\n}\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"<bytes32",">"," is the ",(0,r.kt)("inlineCode",{parentName:"p"},"typeId")," passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"universalReceiver(..)")," function.")),(0,r.kt)("p",null,"If there is no address stored under these data keys, execution continue normally until the emission of the event."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#valuereceived"},"ValueReceived"))," event when a the call is associated with value.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Triggers the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#universalreceiver-1"},"UniversalReceiver"))," event when this function gets successfully executed.")),(0,r.kt)("h4",{id:"parameters-8"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"typeId")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes32")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The type of transfer received.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"data")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The data received.")))),(0,r.kt)("h4",{id:"return-values-6"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The return value of the UniversalReceiverDelegates contracts encoded as bytes.")))),(0,r.kt)("h3",{id:"isvalidsignature"},"isValidSignature"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md#isvalidsignature"},(0,r.kt)("strong",{parentName:"a"},"isValidSignature(..)"))," function specification in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},(0,r.kt)("strong",{parentName:"a"},"LSP0-ERC725Account Standard"))," in the ",(0,r.kt)("strong",{parentName:"p"},"LIP repository"),"."),(0,r.kt)("p",{parentName:"admonition"},"Check the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/v0.8.0/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol#L159"},(0,r.kt)("strong",{parentName:"a"},"isValidSignature(..)"))," function implementation in ",(0,r.kt)("strong",{parentName:"p"},"LSP0ERC725Account")," Contract.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isValidSignature(\n    bytes32 dataHash,\n    bytes memory signature\n) public view returns (bytes4 magicValue)\n")),(0,r.kt)("p",null,"Checks if a signature was signed by the ",(0,r.kt)("a",{parentName:"p",href:"#owner"},(0,r.kt)("inlineCode",{parentName:"a"},"owner"))," of the contract, according to ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1271"},(0,r.kt)("strong",{parentName:"a"},"EIP-1271")),"."),(0,r.kt)("p",null,"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"owner")," is an EOA, the ",(0,r.kt)("strong",{parentName:"p"},"ECDSA algorithm")," will be used to recover the address of the signer from the dataHash and the signature, the function will return the ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1271#specification"},(0,r.kt)("strong",{parentName:"a"},(0,r.kt)("inlineCode",{parentName:"strong"},"MAGICVALUE")))," pointing that the signature is valid, if the address recovered matches the address of the owner. Will return the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"FAIL VALUE"))," ",(0,r.kt)("inlineCode",{parentName:"p"},"0xffffffff")," otherwise."),(0,r.kt)("p",null,"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"owner")," is a contract itself, it will call the ",(0,r.kt)("inlineCode",{parentName:"p"},"isValidsignature(..)")," function on the owner contract, and return the magicValue if the function returns the magicValue. In any other case such as non-standard return value or revert, it will return the failure value indicating that the signature is not valid."),(0,r.kt)("h4",{id:"parameters-9"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"hash")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes32")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The hash of the data signed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"signature")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The signature provided.")))),(0,r.kt)("h4",{id:"return-values-7"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"magicValue")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes4")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The magicValue either ",(0,r.kt)("inlineCode",{parentName:"td"},"0x1626ba7e")," on success or ",(0,r.kt)("inlineCode",{parentName:"td"},"0xffffffff")," failure.")))),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("h3",{id:"ownershiptransferstarted"},"OwnershipTransferStarted"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event OwnershipTransferred(\n    address indexed currentOwner,\n    address indexed newOwner,\n)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"MUST")," be fired when the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#transferownership"},(0,r.kt)("inlineCode",{parentName:"a"},"transferOwnership(...)")))," function is successfully initiated.")),(0,r.kt)("h4",{id:"values"},"Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"currentOwner")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The current owner of the contract.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"newOwner")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The potential new owner of the contract.")))),(0,r.kt)("h3",{id:"ownershiptransferred"},"OwnershipTransferred"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner,\n)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"MUST")," be fired when the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#transferownership"},(0,r.kt)("inlineCode",{parentName:"a"},"transferOwnership(...)")))," function is successfully executed.")),(0,r.kt)("h4",{id:"values-1"},"Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"previousOwner")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The previous owner of the contract.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"newOwner")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The new owner of the contract.")))),(0,r.kt)("h3",{id:"renounceownershipstarted"},"RenounceOwnershipStarted"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event RenounceOwnershipStarted()\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"MUST")," be fired when the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#renounceownership"},(0,r.kt)("inlineCode",{parentName:"a"},"renounceOwnership()")))," process is initiated.")),(0,r.kt)("h3",{id:"ownershiprenounced"},"OwnershipRenounced"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event OwnershipRenounced()\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"MUST")," be fired when the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#renounceownership"},(0,r.kt)("inlineCode",{parentName:"a"},"renounceOwnership()")))," process is confirmed.")),(0,r.kt)("h3",{id:"valuereceived"},"ValueReceived"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event ValueReceived(\n    address sender,\n    uint256 value\n)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"MUST")," be fired when when a native token is received via ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#fallback"},(0,r.kt)("inlineCode",{parentName:"a"},"fallback(...)")))," function.")),(0,r.kt)("h4",{id:"values-2"},"Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sender")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the sender.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount sent.")))),(0,r.kt)("h3",{id:"executed"},"Executed"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event Executed(\n    uint256 operationType,\n    address target,\n    uint256 value,\n    bytes4 selector\n)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"MUST")," be fired when ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#execute"},(0,r.kt)("inlineCode",{parentName:"a"},"execute(...)")))," function creates a new call using the ",(0,r.kt)("inlineCode",{parentName:"em"},"CALL"),", ",(0,r.kt)("inlineCode",{parentName:"em"},"STATICCALL"),", or ",(0,r.kt)("inlineCode",{parentName:"em"},"DELEGATECALL")," operation.")),(0,r.kt)("h4",{id:"values-3"},"Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"operationType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Either ",(0,r.kt)("strong",{parentName:"td"},"0")," (for ",(0,r.kt)("inlineCode",{parentName:"td"},"CALL"),"), ",(0,r.kt)("strong",{parentName:"td"},"3")," (for ",(0,r.kt)("inlineCode",{parentName:"td"},"STATICCALL"),") or ",(0,r.kt)("strong",{parentName:"td"},"3")," (for ",(0,r.kt)("inlineCode",{parentName:"td"},"DELEGATECALL"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"target")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The smart contract or address interacted with.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value transferred.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"selector")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes4")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The bytes4 selector of the function executed at the ",(0,r.kt)("inlineCode",{parentName:"td"},"target")," address")))),(0,r.kt)("h3",{id:"contractcreated"},"ContractCreated"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event ContractCreated(\n    uint256 operation,\n    address contractAddress,\n    uint256 value,\n    bytes32 salt\n)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"MUST")," be fired when the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#execute"},(0,r.kt)("inlineCode",{parentName:"a"},"execute(...)")))," function creates a new contract using the ",(0,r.kt)("inlineCode",{parentName:"em"},"CREATE")," or ",(0,r.kt)("inlineCode",{parentName:"em"},"CREATE2")," operation.")),(0,r.kt)("h4",{id:"values-4"},"Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"operationType")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Either ",(0,r.kt)("strong",{parentName:"td"},"1")," (for ",(0,r.kt)("inlineCode",{parentName:"td"},"CREATE"),") or ",(0,r.kt)("strong",{parentName:"td"},"2")," (for ",(0,r.kt)("inlineCode",{parentName:"td"},"CREATE2"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"contractAddress")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address of the created contract.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value sent to the contract.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"salt")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes32")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The salt used in ",(0,r.kt)("inlineCode",{parentName:"td"},"CREATE2")," operation. Will be ",(0,r.kt)("inlineCode",{parentName:"td"},"bytes32(0)")," in case of ",(0,r.kt)("inlineCode",{parentName:"td"},"CREATE")," operation.")))),(0,r.kt)("h3",{id:"datachanged"},"DataChanged"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event DataChanged(bytes32 dataKey, bytes dataValue)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"MUST")," be fired when the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#setdata"},(0,r.kt)("inlineCode",{parentName:"a"},"setData(...)")))," function is successfully executed.")),(0,r.kt)("h4",{id:"values-5"},"Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dataKey")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes32")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The data key which data value is set.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dataValue")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The data value to set.")))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"DataChanged")," event will emit only the first 256 bytes of ",(0,r.kt)("inlineCode",{parentName:"p"},"dataValue")," (for large values set in the ERC725Y storage).")),(0,r.kt)("h3",{id:"universalreceiver-1"},"UniversalReceiver"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event UniversalReceiver(\n    address from,\n    uint256 value,\n    bytes32 typeId,\n    bytes receivedData\n    bytes returnedValue,\n)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"MUST")," be fired when the ",(0,r.kt)("strong",{parentName:"em"},(0,r.kt)("a",{parentName:"strong",href:"#universalreceiver"},(0,r.kt)("inlineCode",{parentName:"a"},"universalReceiver(...)")))," function is successfully executed.")),(0,r.kt)("h4",{id:"values-6"},"Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"from")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address calling the ",(0,r.kt)("strong",{parentName:"td"},"universalReceiver")," function.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The amount of value sent to the ",(0,r.kt)("strong",{parentName:"td"},"universalReceiver")," function.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"typeId")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes32")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The hash of a specific standard or a hook.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"receivedData")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The arbitrary data passed to ",(0,r.kt)("strong",{parentName:"td"},"universalReceiver")," function.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"returnedValue")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value returned by the ",(0,r.kt)("strong",{parentName:"td"},"universalReceiver")," function.")))),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-0-ERC725Account.md"},"LUKSO Standards Proposals: LSP0 - ERC725 Account (Standard Specification, GitHub)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-3-UniversalProfile-Metadata.md"},"LUKSO Standards Proposals: LSP3 - UniversalProfile Metadata (Standard Specification, GitHub)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/lsp-universalprofile-smart-contracts/tree/develop/contracts"},"Solidity implementations (GitHub)"))))}m.isMDXComponent=!0}}]);