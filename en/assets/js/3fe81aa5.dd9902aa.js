"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[8594],{3905:(e,a,r)=>{r.d(a,{Zo:()=>d,kt:()=>m});var n=r(7294);function s(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function t(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?t(Object(r),!0).forEach((function(a){s(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function o(e,a){if(null==e)return{};var r,n,s=function(e,a){if(null==e)return{};var r,n,s={},t=Object.keys(e);for(n=0;n<t.length;n++)r=t[n],a.indexOf(r)>=0||(s[r]=e[r]);return s}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(n=0;n<t.length;n++)r=t[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=n.createContext({}),c=function(e){var a=n.useContext(l),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},d=function(e){var a=c(e.components);return n.createElement(l.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},p=n.forwardRef((function(e,a){var r=e.components,s=e.mdxType,t=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(r),m=s,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||t;return r?n.createElement(f,i(i({ref:a},d),{},{components:r})):n.createElement(f,i({ref:a},d))}));function m(e,a){var r=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var t=r.length,i=new Array(t);i[0]=p;var o={};for(var l in a)hasOwnProperty.call(a,l)&&(o[l]=a[l]);o.originalType=e,o.mdxType="string"==typeof e?e:s,i[1]=o;for(var c=2;c<t;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5162:(e,a,r)=>{r.d(a,{Z:()=>i});var n=r(7294),s=r(6010);const t="tabItem_Ymn6";function i(e){let{children:a,hidden:r,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,s.Z)(t,i),hidden:r},a)}},4866:(e,a,r)=>{r.d(a,{Z:()=>N});var n=r(7462),s=r(7294),t=r(6010),i=r(2466),o=r(6775),l=r(1980),c=r(7392),d=r(12);function u(e){return function(e){return s.Children.map(e,(e=>{if((0,s.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:a,label:r,attributes:n,default:s}}=e;return{value:a,label:r,attributes:n,default:s}}))}function p(e){const{values:a,children:r}=e;return(0,s.useMemo)((()=>{const e=a??u(r);return function(e){const a=(0,c.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,r])}function m(e){let{value:a,tabValues:r}=e;return r.some((e=>e.value===a))}function f(e){let{queryString:a=!1,groupId:r}=e;const n=(0,o.k6)(),t=function(e){let{queryString:a=!1,groupId:r}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:a,groupId:r});return[(0,l._X)(t),(0,s.useCallback)((e=>{if(!t)return;const a=new URLSearchParams(n.location.search);a.set(t,e),n.replace({...n.location,search:a.toString()})}),[t,n])]}function g(e){const{defaultValue:a,queryString:r=!1,groupId:n}=e,t=p(e),[i,o]=(0,s.useState)((()=>function(e){let{defaultValue:a,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:t}))),[l,c]=f({queryString:r,groupId:n}),[u,g]=function(e){let{groupId:a}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(a),[n,t]=(0,d.Nk)(r);return[n,(0,s.useCallback)((e=>{r&&t.set(e)}),[r,t])]}({groupId:n}),k=(()=>{const e=l??u;return m({value:e,tabValues:t})?e:null})();(0,s.useEffect)((()=>{k&&o(k)}),[k]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!m({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),g(e)}),[c,g,t]),tabValues:t}}var k=r(2389);const v="tabList__CuJ",b="tabItem_LNqP";function y(e){let{className:a,block:r,selectedValue:o,selectValue:l,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.o5)(),p=e=>{const a=e.currentTarget,r=d.indexOf(a),n=c[r].value;n!==o&&(u(a),l(n))},m=e=>{var a;let r=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;r=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;r=d[a]??d[d.length-1];break}}null==(a=r)||a.focus()};return s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":r},a)},c.map((e=>{let{value:a,label:r,attributes:i}=e;return s.createElement("li",(0,n.Z)({role:"tab",tabIndex:o===a?0:-1,"aria-selected":o===a,key:a,ref:e=>d.push(e),onKeyDown:m,onClick:p},i,{className:(0,t.Z)("tabs__item",b,null==i?void 0:i.className,{"tabs__item--active":o===a})}),r??a)})))}function P(e){let{lazy:a,children:r,selectedValue:n}=e;if(a){const e=r.find((e=>e.props.value===n));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return s.createElement("div",{className:"margin-top--md"},r.map(((e,a)=>(0,s.cloneElement)(e,{key:a,hidden:e.props.value!==n}))))}function h(e){const a=g(e);return s.createElement("div",{className:(0,t.Z)("tabs-container",v)},s.createElement(y,(0,n.Z)({},e,a)),s.createElement(P,(0,n.Z)({},e,a)))}function N(e){const a=(0,k.Z)();return s.createElement(h,(0,n.Z)({key:String(a)},e))}},6099:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var n=r(7462),s=(r(7294),r(3905));r(4866),r(5162);const t={sidebar_label:"Otorgar permisos a terceros",sidebar_position:1},i="Otorgar permisos a direcciones de terceros",o={unversionedId:"es/guides/key-manager/give-permissions",id:"es/guides/key-manager/give-permissions",title:"Otorgar permisos a direcciones de terceros",description:"Para seguir esta gu\xeda necesitar\xe1s un Perfil Universal que puedas controlar a trav\xe9s de su KeyManager.",source:"@site/docs/es/guides/key-manager/give-permissions.md",sourceDirName:"es/guides/key-manager",slug:"/es/guides/key-manager/give-permissions",permalink:"/lukso-es/en/es/guides/key-manager/give-permissions",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/es/guides/key-manager/give-permissions.md",tags:[],version:"current",lastUpdatedAt:1680495619,formattedLastUpdatedAt:"Apr 3, 2023",sidebarPosition:1,frontMatter:{sidebar_label:"Otorgar permisos a terceros",sidebar_position:1},sidebar:"guidesSidebar",previous:{title:"Firmar mensajes arbitrarios",permalink:"/lukso-es/en/es/guides/browser-extension/sign-arbitrary-messages"},next:{title:"Obtener direcciones del controlador",permalink:"/lukso-es/en/es/guides/key-manager/get-controllers"}},l={},c=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Configuraci\xf3n",id:"configuraci\xf3n",level:2},{value:"Paso 1 - Inicializa erc725.js",id:"paso-1---inicializa-erc725js",level:2},{value:"Paso 2 - Codificar los permisos",id:"paso-2---codificar-los-permisos",level:2},{value:"2.1 - Crear la autorizaci\xf3n",id:"21---crear-la-autorizaci\xf3n",level:3},{value:"2.2 - Codificar el permiso para la direcci\xf3n de terceros",id:"22---codificar-el-permiso-para-la-direcci\xf3n-de-terceros",level:3},{value:"Paso 3 - A\xf1ade los permisos en tu UP",id:"paso-3---a\xf1ade-los-permisos-en-tu-up",level:2},{value:"3.1 - Carga la direcci\xf3n de tu controlador",id:"31---carga-la-direcci\xf3n-de-tu-controlador",level:3},{value:"3.2 - Crear una instancia de contrato",id:"32---crear-una-instancia-de-contrato",level:3},{value:"3.3 - Define el permiso en el Perfil Universal",id:"33---define-el-permiso-en-el-perfil-universal",level:3},{value:"C\xf3digo final",id:"c\xf3digo-final",level:2},{value:"Comprobando los permisos",id:"comprobando-los-permisos",level:2}],d={toc:c};function u(e){let{components:a,...t}=e;return(0,s.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"otorgar-permisos-a-direcciones-de-terceros"},"Otorgar permisos a direcciones de terceros"),(0,s.kt)("admonition",{title:"Requisitos",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"Para seguir esta gu\xeda necesitar\xe1s un Perfil Universal que puedas controlar a trav\xe9s de su KeyManager. ",(0,s.kt)("br",null),"\nSi a\xfan no cuentas con un perfil universal, sigue nuestra gu\xeda anterior ",(0,s.kt)("a",{parentName:"p",href:"/lukso-es/en/es/guides/universal-profile/create-profile"},(0,s.kt)("strong",{parentName:"a"},"Create a Universal Profile"))," o consulta la documentaci\xf3n ",(0,s.kt)("a",{parentName:"p",href:"/lukso-es/en/es/tools/lsp-factoryjs/deployment/universal-profile"},(0,s.kt)("em",{parentName:"a"},"lsp-factory.js")),".")),(0,s.kt)("p",null,"En esta gu\xeda, aprenderemos a conceder permisos a direcciones de terceros para que puedan interactuar con nuestro Perfil Universal. "),(0,s.kt)("p",null,"Al final de esta gu\xeda, sabr\xe1s:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"C\xf3mo funcionan los permisos en el LSP6 Key Manager + c\xf3mo crearlos utilizando ",(0,s.kt)("a",{parentName:"li",href:"../../../../tools/erc725js/getting-started"},(0,s.kt)("em",{parentName:"a"},"erc725.js")),"."),(0,s.kt)("li",{parentName:"ul"},"C\xf3mo establecer permisos para una ",(0,s.kt)("inlineCode",{parentName:"li"},"direcci\xf3n")," de terceros en su Perfil Universal.")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Otorgar permisos a terceros resumen",src:r(2272).Z,width:"1794",height:"557"})),(0,s.kt)("h2",{id:"introducci\xf3n"},"Introducci\xf3n"),(0,s.kt)("p",null,"El Gestor de Claves o Key Manager (KM) nos permite dar permisos a otras direcciones de terceros para que realicen determinadas acciones en nuestro Perfil Universal (UP), como editar los detalles de nuestro perfil o alg\xfan otro metadato.."),(0,s.kt)("p",null,"Al conceder permisos a una nueva direcci\xf3n, necesitamos actualizar tres datos clave en el almacenamiento ",(0,s.kt)("a",{parentName:"p",href:"/lukso-es/en/es/standards/lsp-background/erc725#erc725y"},"ERC725Y")," de nuestro Perfil Universal:"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"\ud83d\uddc4\ufe0f Clave de datos ERC725Y"),(0,s.kt)("th",{parentName:"tr",align:null},"\ud83d\udcc3 Descripci\xf3n"),(0,s.kt)("th",{parentName:"tr",align:null},"\ud83c\udfaf ",(0,s.kt)("strong",{parentName:"th"},"Objetivo")))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/lukso-es/en/es/standards/universal-profile/lsp6-key-manager#retrieving-addresses-with-permissions"},(0,s.kt)("inlineCode",{parentName:"a"},"AddressPermissions[]"))),(0,s.kt)("td",{parentName:"tr",align:null},"contiene el n\xfamero de direcciones que tienen permisos en nuestra UP."),(0,s.kt)("td",{parentName:"tr",align:null},"Tenemos que ",(0,s.kt)("strong",{parentName:"td"},"aumentarla en +1"),".")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/lukso-es/en/es/standards/universal-profile/lsp6-key-manager#retrieving-addresses-with-permissions"},(0,s.kt)("inlineCode",{parentName:"a"},"AddressPermissions[index]"))),(0,s.kt)("td",{parentName:"tr",align:null},"mantiene una direcci\xf3n de controlador en un \xedndice espec\xedfico."),(0,s.kt)("td",{parentName:"tr",align:null},"Tenemos que ",(0,s.kt)("strong",{parentName:"td"},"a\xf1adir la direcci\xf3n del beneficiario en el nuevo \xedndice"),".")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/lukso-es/en/es/standards/universal-profile/lsp6-key-manager#address-permissions"},(0,s.kt)("inlineCode",{parentName:"a"},"AddressPermissions:Permissions:<beneficiary-address>"))),(0,s.kt)("td",{parentName:"tr",align:null},"esta clave de datos contiene los permisos de una direcci\xf3n de controlador."),(0,s.kt)("td",{parentName:"tr",align:null},"Necesitamos ",(0,s.kt)("strong",{parentName:"td"},"a\xf1adir los permisos de la direcci\xf3n del beneficiario")," bajo esta clave de datos.")))),(0,s.kt)("h2",{id:"configuraci\xf3n"},"Configuraci\xf3n"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @erc725/erc725.js @lukso/lsp-smart-contracts\n")),(0,s.kt)("h2",{id:"paso-1---inicializa-erc725js"},"Paso 1 - Inicializa erc725.js"),(0,s.kt)("p",null,"El primer paso es inicializar la librer\xeda erc725.js con un schema JSON espec\xedfico para el LSP6 Key Manager. Esto permitir\xe1 a la biblioteca saber c\xf3mo crear y codificar los permisos."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'import { ERC725 } from "@erc725/erc725.js";\nimport LSP6Schema from "@erc725/erc725.js/schemas/LSP6KeyManager.json";\n\n// paso 1 -inicializar erc725.js con las claves de datos de permisos ERC725Y de LSP6 Key Manager\nconst erc725 = new ERC725(LSP6Schema, myUniversalProfileAddress, web3.currentProvider);\n')),(0,s.kt)("h2",{id:"paso-2---codificar-los-permisos"},"Paso 2 - Codificar los permisos"),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"Hay m\xe1s permisos disponibles en erc725.js. Consulta la documentaci\xf3n de la API de la funci\xf3n ",(0,s.kt)("a",{parentName:"p",href:"/lukso-es/en/es/tools/erc725js/classes/ERC725#encodepermissions"},(0,s.kt)("inlineCode",{parentName:"a"},"encodePermissions(...)"))," para obtener una lista completa.")),(0,s.kt)("p",null,"Ahora podemos usar erc725.js para crear los permisos para una ",(0,s.kt)("inlineCode",{parentName:"p"},"direcci\xf3n")," espec\xedfica de terceros. La biblioteca proporciona funciones muy \xfatiles, como ",(0,s.kt)("a",{parentName:"p",href:"../../../../../tools/erc725js/classes/ERC725#encodepermissions"},(0,s.kt)("inlineCode",{parentName:"a"},"encodePermissions")),"."),(0,s.kt)("h3",{id:"21---crear-la-autorizaci\xf3n"},"2.1 - Crear la autorizaci\xf3n"),(0,s.kt)("p",null,"Consideremos en nuestro ejemplo que queremos otorgar el permiso ",(0,s.kt)("inlineCode",{parentName:"p"},"SETDATA")," a un ",(0,s.kt)("inlineCode",{parentName:"p"},"beneficiaryAddress"),", para que pueda editar los detalles de nuestro Perfil Universal por nosotros."),(0,s.kt)("p",null,"Podemos hacer esto muy f\xe1cilmente con erc725.js, usando la funci\xf3n ",(0,s.kt)("inlineCode",{parentName:"p"},"encodePermissions(...)"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"// step 2.1 - create the permissions of the beneficiary address\nconst beneficiaryPermissions = erc725.encodePermissions({\n    SETDATA: true,\n});\n")),(0,s.kt)("h3",{id:"22---codificar-el-permiso-para-la-direcci\xf3n-de-terceros"},"2.2 - Codificar el permiso para la direcci\xf3n de terceros"),(0,s.kt)("p",null,"Ahora que hemos creado el valor del permiso ",(0,s.kt)("inlineCode",{parentName:"p"},"SETDATA"),", tenemos que asignarlo a la ",(0,s.kt)("inlineCode",{parentName:"p"},"beneficiaryAddress"),"."),(0,s.kt)("p",null,"Para ello, necesitamos asignar el valor del permiso creado en el paso 2.1 a la ",(0,s.kt)("inlineCode",{parentName:"p"},"beneficiaryAddress"),", utilizando el ",(0,s.kt)("inlineCode",{parentName:"p"},"AddressPermissions:Permissions:<address>"),", donde ",(0,s.kt)("inlineCode",{parentName:"p"},"<address>")," ser\xe1 la direcci\xf3n del beneficiario."),(0,s.kt)("p",null,"Tambi\xe9n tenemos que a\xf1adir el ",(0,s.kt)("inlineCode",{parentName:"p"},"beneficiaryAddress")," dentro de la matriz ",(0,s.kt)("inlineCode",{parentName:"p"},"AddressPermissions[]"),", e incrementar la longitud de la matriz ",(0,s.kt)("inlineCode",{parentName:"p"},"AddressPermissions[]")," (+1)."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'// paso 2.2 - codificar los datos pares clave-valor de los permisos para configurar la direcci\xf3n del beneficiario\nconst beneficiaryAddress = "0xcafecafecafecafecafecafecafecafecafe"; // Direcci\xf3n EOA de una persona de ejemplo\n\nconst addressPermissionsArray = await erc725.getData("AddressPermissions[]");\nconst controllers = addressPermissionsArray.value;\n\nconst permissionData = erc725.encodeData([\n    // la autorizaci\xf3n de la direcci\xf3n beneficiaria\n    {\n        keyName: "AddressPermissions:Permissions:<address>",\n        dynamicKeyParts: beneficiaryAddress,\n        value: beneficiaryPermissions,\n    },\n    // la nueva lista de direcciones de los controladores (= direcciones con permisos establecidos en la UP)\n    // + la longitud incrementada de la matriz `AddressPermissions[]`.\n    {\n      keyName: "AddressPermissions[]",\n      value: [...controllers, beneficiaryAddress],\n    },\n]);\n')),(0,s.kt)("h2",{id:"paso-3---a\xf1ade-los-permisos-en-tu-up"},"Paso 3 - A\xf1ade los permisos en tu UP"),(0,s.kt)("p",null,"Ahora tenemos todos los datos necesarios para configurar el permiso para esta direcci\xf3n de terceros en nuestro Perfil Universal."),(0,s.kt)("h3",{id:"31---carga-la-direcci\xf3n-de-tu-controlador"},"3.1 - Carga la direcci\xf3n de tu controlador"),(0,s.kt)("p",null,"Necesitaremos interactuar con el Key Manager desde la direcci\xf3n del controlador principal (la cuenta de propiedad externa (EOA) que tiene todos los permisos sobre la UP)."),(0,s.kt)("p",null,"El primer paso es cargar la direcci\xf3n de dicho controlador principal como una EOA utilizando su clave privada."),(0,s.kt)("p",null,"La clave privada puede obtenerse dependiendo de c\xf3mo haya creado su Perfil Universal:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"UP creado con nuestra gu\xeda ",(0,s.kt)("strong",{parentName:"li"},"Crear un perfil universal"),": deber\xedas haber proporcionado la clave privada y conocerla."),(0,s.kt)("li",{parentName:"ul"},"UP creado con el ",(0,s.kt)("em",{parentName:"li"},"lsp-factory.js"),": es la clave privada dada en el campo ",(0,s.kt)("inlineCode",{parentName:"li"},"controllerAddresses")," del m\xe9todo ",(0,s.kt)("a",{parentName:"li",href:"../../tools/lsp-factoryjs/classes/universal-profile#deploy"},(0,s.kt)("inlineCode",{parentName:"a"},"lspFactory.UniversalProfile.deploy(...)"))),(0,s.kt)("li",{parentName:"ul"},"UP creado a trav\xe9s de la extensi\xf3n del navegador: haz clic en el icono ",(0,s.kt)("em",{parentName:"li"},"Configuraci\xf3n")," (arriba a la derecha) > y ",(0,s.kt)("em",{parentName:"li"},"Exportar clave privada"),".")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Load account from a private key"',title:'"Load',account:!0,from:!0,a:!0,private:!0,'key"':!0},"import Web3 from 'web3';\nconst web3 = new Web3('https://rpc.l16.lukso.network');\n\nconst PRIVATE_KEY = '0x...'; // tu clave privada EOA (creada previamente)\n\nconst myEOA = web3.eth.accounts.wallet.add(PRIVATE_KEY);\n")),(0,s.kt)("h3",{id:"32---crear-una-instancia-de-contrato"},"3.2 - Crear una instancia de contrato"),(0,s.kt)("p",null,"El siguiente paso es crear la instancia web3 de nuestros contratos inteligentes para interactuar con ellos. Las ABIs de los contratos est\xe1n disponibles en el paquete npm @lukso/lsp-smart-contracts."),(0,s.kt)("p",null,"Necesitar\xe1s la direcci\xf3n de tu Perfil Universal desplegado en L16."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'import UniversalProfile from "@lukso/lsp-smart-contracts/artifacts/UniversalProfile.json";\nimport KeyManager from "@lukso/lsp-smart-contracts/artifacts/LSP6KeyManager.json";\nimport Web3 from "web3";\n\nconst RPC_ENDPOINT = "https://rpc.l16.lukso.network";\nconst web3 = new Web3(RPC_ENDPOINT);\n\n\n// paso 1 - crear una instancia de los contratos UniversalProfile y KeyManager\nconst myUniversalProfileAddress = "0x4F81bFDD12c73c94222C7879C91c1B837b8adb62";\nconst myUniversalProfile = new web3.eth.Contract(UniversalProfile.abi, myUniversalProfileAddress);\n')),(0,s.kt)("p",null,"Dado que el KeyManager es el propietario del Perfil Universal, su direcci\xf3n puede obtenerse f\xe1cilmente consultando el ",(0,s.kt)("inlineCode",{parentName:"p"},"owner()")," del Perfil Universal."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const keyManagerAddress = await myUniversalProfile.methods.owner().call();\nconst myKeyManager = new web3.eth.Contract(KeyManager.abi, keyManagerAddress);\n")),(0,s.kt)("h3",{id:"33---define-el-permiso-en-el-perfil-universal"},"3.3 - Define el permiso en el Perfil Universal"),(0,s.kt)("p",null,"El \xfaltimo y definitivo paso es configurar los permisos del ",(0,s.kt)("inlineCode",{parentName:"p"},"beneficiaryAddress")," en nuestro Perfil Universal."),(0,s.kt)("p",null,"Podemos acceder f\xe1cilmente al par clave-valor de los datos codificados obtenidos por erc725.js en el paso 2.2."),(0,s.kt)("p",null,"A continuaci\xf3n, codificaremos esta claves de datos de permisos en una carga \xfatil ",(0,s.kt)("inlineCode",{parentName:"p"},"setData(...)")," e interactuaremos a trav\xe9s del Key Manager."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'// paso 3.3 - codifica la carga \xfatil para establecer los permisos y env\xeda la transacci\xf3n a trav\xe9s del Key Manager\nconst payload = myUniversalProfile.methods["setData(bytes32[],bytes[])"](data.keys, data.values).encodeABI();\n\n  // paso 4 - enviar la transacci\xf3n a trav\xe9s del contrato Key Manager\n  await myKeyManager.methods.execute(payload).send({\n    from: myEOA.address,\n    gasLimit: 300_000,\n  });\n')),(0,s.kt)("h2",{id:"c\xf3digo-final"},"C\xf3digo final"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'import { ERC725 } from "@erc725/erc725.js";\nimport LSP6Schema from "@erc725/erc725.js/schemas/LSP6KeyManager.json";\nimport UniversalProfile from "@lukso/lsp-smart-contracts/artifacts/UniversalProfile.json";\nimport KeyManager from "@lukso/lsp-smart-contracts/artifacts/LSP6KeyManager.json";\nimport Web3 from "web3";\n\n// ajustes\nconst myUniversalProfileAddress = "0x..."; // la direcci\xf3n de su Perfil Universal en la L16\nconst RPC_ENDPOINT = "https://rpc.l16.lukso.network";\n\nconst web3 = new Web3(RPC_ENDPOINT);\nconst erc725 = new ERC725(LSP6Schema, myUniversalProfileAddress, web3.currentProvider);\n\nconst PRIVATE_KEY = "0x..."; // clave privada de la direcci\xf3n de su controlador principal\nconst myEOA = web3.eth.accounts.wallet.add(PRIVATE_KEY);\n\nasync function grantPermissions() {\n  // paso 1 - crear una instancia de los contratos UniversalProfile y KeyManager\n  const myUniversalProfile = new web3.eth.Contract(UniversalProfile.abi, myUniversalProfileAddress);\n\n  const keyManagerAddress = await myUniversalProfile.methods.owner().call();\n  const myKeyManager = new web3.eth.Contract(KeyManager.abi, keyManagerAddress);\n  console.log("keyManagerAddress", keyManagerAddress);\n\n  // paso 2 - configura los permisos de la direcci\xf3n beneficiaria\n  const beneficiaryAddress = "0xcafecafecafecafecafecafecafecafecafecafe"; // Direcci\xf3n muestra de una EOA\n  const beneficiaryPermissions = erc725.encodePermissions({\n    SETDATA: true,\n  });\n\n  // paso 3.1 - cifra los pares de datos clave-valor de los permisos que deben establecerse\n  const addressPermissionsArray = await erc725.getData("AddressPermissions[]");\n  const controllers = addressPermissionsArray.value;\n\n  const data = erc725.encodeData([\n    // la autorizaci\xf3n de la direcci\xf3n del beneficiario\n    {\n        keyName: "AddressPermissions:Permissions:<address>",\n        dynamicKeyParts: beneficiaryAddress,\n        value: beneficiaryPermissions,\n    },\n    // las nuevas direcciones de los controladores de listas (= direcciones con permisos establecidos en la UP)\n    // + el incremento de la matriz `AddressPermissions[]`.\n    {\n      keyName: "AddressPermissions[]",\n      value: [...controllers, beneficiaryAddress],\n    },\n  ]);\n\n  //   paso 3.2 - cifre la carga \xfatil que se enviar\xe1 al contrato del Key Manager\n  const payload = myUniversalProfile.methods["setData(bytes32[],bytes[])"](data.keys, data.values).encodeABI();\n\n  // paso 4 - env\xede la transacci\xf3n a trav\xe9s del contrato Key Manager\n  await myKeyManager.methods.execute(payload).send({\n    from: myEOA.address,\n    gasLimit: 300_000,\n  });\n\n  const result = await myUniversalProfile.methods["getData(bytes32)"](data.keys[0]).call();\n  console.log(\n    `La direcci\xf3n beneficiaria ${beneficiaryAddress} tiene ahora los siguientes permisos:`,\n    erc725.decodePermissions(result)\n  );\n}\n\ngrantPermissions();\n')),(0,s.kt)("h2",{id:"comprobando-los-permisos"},"Comprobando los permisos"),(0,s.kt)("p",null,"Ahora podemos comprobar que los permisos se han establecido correctamente consultando la clave de datos ",(0,s.kt)("inlineCode",{parentName:"p"},"AddressPermissions:Permissions:<beneficiaryAddress>")," en el almacenamiento ERC725Y del Perfil Universal."),(0,s.kt)("p",null,"Si todo ha ido bien, el siguiente fragmento de c\xf3digo deber\xeda devolverte un objeto con el permiso ",(0,s.kt)("inlineCode",{parentName:"p"},"SETDATA")," establecido en ",(0,s.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'const result = await myUniversalProfile.methods["getData(bytes32)"](data.keys[0]).call();\n  console.log(\n    `La direcci\xf3n beneficiaria ${beneficiaryAddress} tiene ahora los siguientes permisos:`,\n    erc725.decodePermissions(result)\n  );\n')),(0,s.kt)("p",null,"Finalmente, para probar los permisos reales, puedes hacer esta gu\xeda usando una ",(0,s.kt)("inlineCode",{parentName:"p"},"beneficiaryAddress")," sobre la que tengas control (creada manualmente v\xeda web3.js)."),(0,s.kt)("p",null,"A continuaci\xf3n, puedes intentar hacer de nuevo la gu\xeda ",(0,s.kt)("strong",{parentName:"p"},"Editar nuestro Perfil Universal"),", utilizando esta nueva direcci\xf3n de terceros sobre la que tienes control para comprobar si puede editar con \xe9xito los detalles del perfil. Esto te garantizar\xe1 que esta ",(0,s.kt)("inlineCode",{parentName:"p"},"beneficiaryAddress")," tiene el permiso ",(0,s.kt)("inlineCode",{parentName:"p"},"SETDATA")," funcionando."))}u.isMDXComponent=!0},2272:(e,a,r)=>{r.d(a,{Z:()=>n});const n=r.p+"assets/images/grant-permissions-to-3rd-parties-overview-992c2608435308ce639a3f1d47dbe5a9.jpeg"}}]);