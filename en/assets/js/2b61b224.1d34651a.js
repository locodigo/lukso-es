"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[6707],{3905:(e,a,n)=>{n.d(a,{Zo:()=>p,kt:()=>u});var t=n(7294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=t.createContext({}),o=function(e){var a=t.useContext(d),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},p=function(e){var a=o(e.components);return t.createElement(d.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=o(n),u=i,k=c["".concat(d,".").concat(u)]||c[u]||m[u]||r;return n?t.createElement(k,l(l({ref:a},p),{},{components:n})):t.createElement(k,l({ref:a},p))}));function u(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var s={};for(var d in a)hasOwnProperty.call(a,d)&&(s[d]=a[d]);s.originalType=e,s.mdxType="string"==typeof e?e:i,l[1]=s;for(var o=2;o<r;o++)l[o]=n[o];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7610:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>o});var t=n(7462),i=(n(7294),n(3905));const r={sidebar_position:1},l="EIP191Signer",s={unversionedId:"es/tools/eip191-signerjs/Classes/EIP191Signer",id:"es/tools/eip191-signerjs/Classes/EIP191Signer",title:"EIP191Signer",description:"hashEthereumSignedMessage",source:"@site/docs/es/tools/eip191-signerjs/Classes/EIP191Signer.md",sourceDirName:"es/tools/eip191-signerjs/Classes",slug:"/es/tools/eip191-signerjs/Classes/EIP191Signer",permalink:"/lukso-es/en/es/tools/eip191-signerjs/Classes/EIP191Signer",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/es/tools/eip191-signerjs/Classes/EIP191Signer.md",tags:[],version:"current",lastUpdatedAt:1680495619,formattedLastUpdatedAt:"Apr 3, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"toolsSidebar",previous:{title:"Primeros Pasos",permalink:"/lukso-es/en/es/tools/eip191-signerjs/getting-started"},next:{title:"Primeros Pasos",permalink:"/lukso-es/en/es/tools/lsp-smart-contracts/getting-started"}},d={},o=[{value:"hashEthereumSignedMessage",id:"hashethereumsignedmessage",level:2},{value:"Par\xe1metros",id:"par\xe1metros",level:3},{value:"Respuesta",id:"respuesta",level:3},{value:"Ejemplo",id:"ejemplo",level:3},{value:"hashDataWithIntendedValidator",id:"hashdatawithintendedvalidator",level:2},{value:"Par\xe1metros",id:"par\xe1metros-1",level:3},{value:"Respuesta",id:"respuesta-1",level:3},{value:"Ejemplo",id:"ejemplo-1",level:3},{value:"signEthereumSignedMessage",id:"signethereumsignedmessage",level:2},{value:"Par\xe1metros",id:"par\xe1metros-2",level:3},{value:"Respuesta",id:"respuesta-2",level:3},{value:"Ejemplo",id:"ejemplo-2",level:3},{value:"signDataWithIntendedValidator",id:"signdatawithintendedvalidator",level:2},{value:"Par\xe1metros",id:"par\xe1metros-3",level:3},{value:"Respuesta",id:"respuesta-3",level:3},{value:"Ejemplo",id:"ejemplo-3",level:3},{value:"recover",id:"recover",level:2},{value:"Par\xe1metros",id:"par\xe1metros-4",level:3},{value:"Respuesta",id:"respuesta-4",level:3},{value:"Ejemplo",id:"ejemplo-4",level:3}],p={toc:o};function m(e){let{components:a,...n}=e;return(0,i.kt)("wrapper",(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"eip191signer"},"EIP191Signer"),(0,i.kt)("h2",{id:"hashethereumsignedmessage"},"hashEthereumSignedMessage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.hashEthereumSignedMessage(message);\n")),(0,i.kt)("p",null,"Realiza el hash del mensaje introducido. El mensaje ser\xe1 envuelto como sigue: ",(0,i.kt)("inlineCode",{parentName:"p"},"'\\x19' + '\\x45' + 'thereum Mensaje Firmado:\\n' + messageBytes.length + message")," y hasheado usando keccak256."),(0,i.kt)("h3",{id:"par\xe1metros"},"Par\xe1metros"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"message")," - ",(0,i.kt)("inlineCode",{parentName:"p"},"Cadena"),": Un mensaje a hashear."),(0,i.kt)("h3",{id:"respuesta"},"Respuesta"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Cadena"),": El mensaje con hash construido como ",(0,i.kt)("inlineCode",{parentName:"p"},"'\\x19' + '\\x45' + 'thereum Signed Message:\\n' + messageBytes.length + message"),"."),(0,i.kt)("h3",{id:"ejemplo"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.hashEthereumSignedMessage('Hola Mundo');\n// '0xa1de988600a42c4b4ab089b619297c17d53cffae5d5120d82d8a92d0bb3b78f2';\n")),(0,i.kt)("h2",{id:"hashdatawithintendedvalidator"},"hashDataWithIntendedValidator"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.hashDataWithIntendedValidator(validatorAddress, message);\n")),(0,i.kt)("p",null,"Realiza el hash del mensaje introducido. El mensaje ser\xe1 envuelto de la siguiente manera: ",(0,i.kt)("inlineCode",{parentName:"p"},"'\\x19' + '\\x00' + validatorAddress + message")," y se hashear\xe1 utilizando keccak256."),(0,i.kt)("h3",{id:"par\xe1metros-1"},"Par\xe1metros"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"validatorAddress")," - ",(0,i.kt)("inlineCode",{parentName:"p"},"Cadena"),": La direcci\xf3n del validador."),(0,i.kt)("p",null,"message",(0,i.kt)("inlineCode",{parentName:"p"},"-"),"Cadena`: Un mensaje para hash."),(0,i.kt)("h3",{id:"respuesta-1"},"Respuesta"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Cadena"),": El mensaje hash construido como ",(0,i.kt)("inlineCode",{parentName:"p"},"'\\x19' + '\\x00' + validatorAddress + message"),"."),(0,i.kt)("h3",{id:"ejemplo-1"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.hashDataWithIntendedValidator(\n  0xad278a6ead89f6b6c6fdf54a3e6e876660593b45,\n  'Hola Mundo',\n);\n// '0xa63022286ecaa3317625e319a64b3bf01c41da558dfc1890e8cb196eb414ffd5';\n")),(0,i.kt)("h2",{id:"signethereumsignedmessage"},"signEthereumSignedMessage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.signEthereumSignedMessage(message, signingKey);\n")),(0,i.kt)("p",null,"Firma un mensaje. El mensaje pasado como par\xe1metro se envolver\xe1 de la siguiente manera: ",(0,i.kt)("inlineCode",{parentName:"p"},"'\\x19' + '\\x45' + 'thereum Mensaje Firmado:\\n' + messageBytes.length + message")),(0,i.kt)("h3",{id:"par\xe1metros-2"},"Par\xe1metros"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"message")," - ",(0,i.kt)("inlineCode",{parentName:"p"},"Cadena"),": El mensaje a firmar.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"signingKey")," - ",(0,i.kt)("inlineCode",{parentName:"p"},"Cadena"),": La clave privada con la que firmar."))),(0,i.kt)("h3",{id:"respuesta-2"},"Respuesta"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Object"),": ",(0,i.kt)("strong",{parentName:"p"},"El objeto Mensaje")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"message")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": El mensaje dado."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"messageHash")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": El hash del mensaje dado construido como ",(0,i.kt)("inlineCode",{parentName:"li"},"'\\x19' + '\\x45' + 'thereum Signed Message:\\n' + messageBytes.length + message"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"r")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": Primeros 32 bytes de la firma."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"s")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": Los 32 bytes siguientes de la firma."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"v")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": Valor de recuperaci\xf3n + 27."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"signature")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": La firma codificada RLP en bruto.")),(0,i.kt)("h3",{id:"ejemplo-2"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.signEthereumSignedMessage(\n  'Hola Mundo',\n  'ffeb17b9a6059fec3bbab63d76b060b7380cac7a62ce6621a134531a46458968',\n);\n/**\n{     message: 'Hola Mundo',\n      messageHash: '0xa1de988600a42c4b4ab089b619297c17d53cffae5d5120d82d8a92d0bb3b78f2',\n      v: '0x1c',\n      r: '0x85c15865f2909897c1be6d66c1d9c86d6125978aec9e28d1a69d4d306bde694f',\n      s: '0x7cf9723f0eeaf8815e3fa984ac1d7bf3c420786ead91abd4dd9c1657897efec1',\n      signature: '0x85c15865f2909897c1be6d66c1d9c86d6125978aec9e28d1a69d4d306bde694f7cf9723f0eeaf8815e3fa984ac1d7bf3c420786ead91abd4dd9c1657897efec11c'\n    }\n*/\n")),(0,i.kt)("h2",{id:"signdatawithintendedvalidator"},"signDataWithIntendedValidator"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.signDataWithIntendedValidator(\n  validatorAddress,\n  message,\n  signingKey,\n);\n")),(0,i.kt)("p",null,"Firma un mensaje. El mensaje pasado como par\xe1metro se envolver\xe1 de la siguiente manera: ",(0,i.kt)("inlineCode",{parentName:"p"},"'\\x19' + '\\x00' + validatorAddress + message"),"."),(0,i.kt)("h3",{id:"par\xe1metros-3"},"Par\xe1metros"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"validatorAddress")," - ",(0,i.kt)("inlineCode",{parentName:"p"},"Cadena"),": La direcci\xf3n del validador.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"message")," - ",(0,i.kt)("inlineCode",{parentName:"p"},"Cadena"),": El mensaje a firmar.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"signingKey")," - ",(0,i.kt)("inlineCode",{parentName:"p"},"Cadena"),": La clave privada con la que firmar."))),(0,i.kt)("h3",{id:"respuesta-3"},"Respuesta"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Object"),": ",(0,i.kt)("strong",{parentName:"p"},"El objeto Mensaje")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"message")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": El mensaje dado."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"messageHash")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": El hash del mensaje dado construido como ",(0,i.kt)("inlineCode",{parentName:"li"},"'\\x19' + '\\x00' + validatorAddress + message"),"."),(0,i.kt)("li",{parentName:"ul"},"r",(0,i.kt)("inlineCode",{parentName:"li"},"-"),"Cadena`: Los primeros 32 bytes de la firma."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"s")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": Los 32 bytes siguientes de la firma."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"v")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": Valor de recuperaci\xf3n + 27."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"signature")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": La firma codificada RLP en bruto.")),(0,i.kt)("h3",{id:"ejemplo-3"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.signDataWithIntendedValidator(\n  '0xad278a6ead89f6b6c6fdf54a3e6e876660593b45',\n  'Hola Mundo',\n  'ffeb17b9a6059fec3bbab63d76b060b7380cac7a62ce6621a134531a46458968',\n);\n/**\n    {\n      message: 'Hola Mundo',\n      messageHash: '0xa1de988600a42c4b4ab089b619297c17d53cffae5d5120d82d8a92d0bb3b78f2',\n      v: '0x1c',\n      r: '0x85c15865f2909897c1be6d66c1d9c86d6125978aec9e28d1a69d4d306bde694f',\n      s: '0x7cf9723f0eeaf8815e3fa984ac1d7bf3c420786ead91abd4dd9c1657897efec1',\n      signature: '0x85c15865f2909897c1be6d66c1d9c86d6125978aec9e28d1a69d4d306bde694f7cf9723f0eeaf8815e3fa984ac1d7bf3c420786ead91abd4dd9c1657897efec11c'\n    }\n\n*/\n")),(0,i.kt)("h2",{id:"recover"},"recover"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.recover(message, signature);\n")),(0,i.kt)("p",null,"Recupera la direcci\xf3n que se utiliz\xf3 para firmar el mensaje dado."),(0,i.kt)("h3",{id:"par\xe1metros-4"},"Par\xe1metros"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"messageHash"),' - "Cadena|Objeto": ',(0,i.kt)("strong",{parentName:"p"},"O bien mensaje firmado ya prefijado y hasheado u objeto Mensaje con los siguientes valores"),":"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"message")," - 'Cadena': El mensaje dado."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"messageHash")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": El hash del mensaje dado."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"r")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": Los primeros 32 bytes de la firma."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"s")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": Los siguientes 32 bytes de la firma."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"v")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": Valor de recuperaci\xf3n + 27."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"signature")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"Cadena"),": La firma codificada RLP en bruto."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"signature")," - ",(0,i.kt)("inlineCode",{parentName:"p"},"Cadena"),": La firma cruda codificada en RLP."))),(0,i.kt)("h3",{id:"respuesta-4"},"Respuesta"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Cadena"),": La direcci\xf3n utilizada para firmar el mensaje dado."),(0,i.kt)("h3",{id:"ejemplo-4"},"Ejemplo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"eip191Signer.recover(\n  'Hola Mundo',\n  '0x1eab2de0103b8e82650f9706b17cf2adce55a335e7041bad5a94ab49c56a9c12662e80a369ffa2a6a77fbeaad1f32653cbd74860c8fbc999b1fc47b8d1cb7d931c',\n);\n// 0x4C58e78663CB5D2Bd84Dc10beDe82A7C83442a8d;\n")))}m.isMDXComponent=!0}}]);