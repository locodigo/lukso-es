"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[9148],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>N});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},o=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),o=s(a),N=r,y=o["".concat(d,".").concat(N)]||o[N]||k[N]||l;return a?n.createElement(y,i(i({ref:t},m),{},{components:a})):n.createElement(y,i({ref:t},m))}));function N(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=o;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}o.displayName="MDXCreateElement"},1365:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const l={title:"LSP2Utils",sidebar_position:1},i="LSP2JSONSchemaUtils",p={unversionedId:"es/standards/smart-contracts/utils/lsp2-json-schema-utils",id:"es/standards/smart-contracts/utils/lsp2-json-schema-utils",title:"LSP2Utils",description:"LSP2Utils.sol",source:"@site/docs/es/standards/smart-contracts/utils/lsp2-json-schema-utils.md",sourceDirName:"es/standards/smart-contracts/utils",slug:"/es/standards/smart-contracts/utils/lsp2-json-schema-utils",permalink:"/lukso-es/en/es/standards/smart-contracts/utils/lsp2-json-schema-utils",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/es/standards/smart-contracts/utils/lsp2-json-schema-utils.md",tags:[],version:"current",lastUpdatedAt:1680197874,formattedLastUpdatedAt:"Mar 30, 2023",sidebarPosition:1,frontMatter:{title:"LSP2Utils",sidebar_position:1},sidebar:"standardsSidebar",previous:{title:"LSP14Ownable2Step",permalink:"/lukso-es/en/es/standards/smart-contracts/lsp14-ownable-2-step"},next:{title:"LSP5Utils",permalink:"/lukso-es/en/es/standards/smart-contracts/utils/lsp5-received-assets-utils"}},d={},s=[{value:"Functions",id:"functions",level:2},{value:"generateSingletonKey",id:"generatesingletonkey",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Return Values:",id:"return-values",level:4},{value:"generateArrayKey",id:"generatearraykey",level:3},{value:"Requirements:",id:"requirements",level:5},{value:"Parameters:",id:"parameters-1",level:4},{value:"Return Values:",id:"return-values-1",level:4},{value:"generateArrayElementKeyAtIndex",id:"generatearrayelementkeyatindex",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Return Values:",id:"return-values-2",level:4},{value:"generateMappingKey(string,srting)",id:"generatemappingkeystringsrting",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Return Values:",id:"return-values-3",level:4},{value:"generateMappingKey(string,address)",id:"generatemappingkeystringaddress",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"Return Values:",id:"return-values-4",level:4},{value:"generateMappingKey(bytes10,bytes20)",id:"generatemappingkeybytes10bytes20",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"Return Values:",id:"return-values-5",level:4},{value:"generateMappingWithGroupingKey(string,string,address)",id:"generatemappingwithgroupingkeystringstringaddress",level:3},{value:"Parameters:",id:"parameters-6",level:4},{value:"Return Values:",id:"return-values-6",level:4},{value:"generateMappingWithGroupingKey(bytes10,bytes20)",id:"generatemappingwithgroupingkeybytes10bytes20",level:3},{value:"Parameters:",id:"parameters-7",level:4},{value:"Return Values:",id:"return-values-7",level:4},{value:"generateJSONURLValue",id:"generatejsonurlvalue",level:3},{value:"Parameters:",id:"parameters-8",level:4},{value:"Return Values:",id:"return-values-8",level:4},{value:"generateASSETURLValue",id:"generateasseturlvalue",level:3},{value:"Parameters:",id:"parameters-9",level:4},{value:"Return Values:",id:"return-values-9",level:4},{value:"isEncodedArray",id:"isencodedarray",level:3},{value:"Parameters:",id:"parameters-10",level:4},{value:"isEncodedArrayOfAddresses",id:"isencodedarrayofaddresses",level:3},{value:"Parameters:",id:"parameters-11",level:4},{value:"isBytes4EncodedArray",id:"isbytes4encodedarray",level:3},{value:"Parameters:",id:"parameters-12",level:4},{value:"isCompactBytesArray",id:"iscompactbytesarray",level:3},{value:"Parameters:",id:"parameters-13",level:4},{value:"uncheckedIncrement",id:"uncheckedincrement",level:3},{value:"References",id:"references",level:2}],m={toc:s};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"lsp2jsonschemautils"},"LSP2JSONSchemaUtils"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/develop/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol"},(0,r.kt)("inlineCode",{parentName:"a"},"LSP2Utils.sol")))),(0,r.kt)("p",null,"This library can be used to generate ERC725Y data keys according to the JSON schemas defined in the LSP2 standard."),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"generatesingletonkey"},"generateSingletonKey"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateSingletonKey(\n    string memory keyName\n) internal pure returns (bytes32);\n")),(0,r.kt)("p",null,"Generates a data key of ",(0,r.kt)("inlineCode",{parentName:"p"},"keyType")," Singleton."),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"keyName")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The string to hash to generate a Singleton data key.")))),(0,r.kt)("h4",{id:"return-values"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," Singleton.")))),(0,r.kt)("h3",{id:"generatearraykey"},"generateArrayKey"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateArrayKey(\n    string memory keyName\n) internal pure returns (bytes32);\n")),(0,r.kt)("p",null,"Generates a data key of ",(0,r.kt)("inlineCode",{parentName:"p"},"keyType")," Array by hashing ",(0,r.kt)("inlineCode",{parentName:"p"},"keyName"),"."),(0,r.kt)("h5",{id:"requirements"},"Requirements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The last two characters MUST be ",(0,r.kt)("inlineCode",{parentName:"li"},"[]"),".")),(0,r.kt)("p",null,"E.g.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},'string memory keyName = "ArrayName[]";\n')),(0,r.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"keyName")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The string that will be used to generate a data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," Array")))),(0,r.kt)("h4",{id:"return-values-1"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," Array.")))),(0,r.kt)("h3",{id:"generatearrayelementkeyatindex"},"generateArrayElementKeyAtIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateArrayElementKeyAtIndex(\n    bytes32 arrayKey,\n    uint256 index\n) internal pure returns (bytes32);\n")),(0,r.kt)("p",null,"Generates the element data key for the ",(0,r.kt)("inlineCode",{parentName:"p"},"arrayKey")," at the given ",(0,r.kt)("inlineCode",{parentName:"p"},"index"),". This is done by concatenating the first 16 bytes of ",(0,r.kt)("inlineCode",{parentName:"p"},"arrayKey")," with an ",(0,r.kt)("inlineCode",{parentName:"p"},"index"),"."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"arrayKey")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Array data key.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"index")),(0,r.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Index of the element in the array.")))),(0,r.kt)("h4",{id:"return-values-2"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Data key of the element in the array.")))),(0,r.kt)("h3",{id:"generatemappingkeystringsrting"},"generateMappingKey(string,srting)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateMappingKey(\n    string memory firstWord,\n    string memory lastWord\n) internal pure returns (bytes32);\n")),(0,r.kt)("p",null,"Generates a data key of ",(0,r.kt)("inlineCode",{parentName:"p"},"keyType")," Mapping by concatenating the hash of the ",(0,r.kt)("inlineCode",{parentName:"p"},"firstWord")," with the hash of the ",(0,r.kt)("inlineCode",{parentName:"p"},"secondWord"),"."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"firstWord")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Used to generate a hash and its first 10 bytes are used for the first part of the data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," Mapping.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lastWord")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Used to generate a hash and its first 20 bytes are used for the last part of the data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," Mapping.")))),(0,r.kt)("h4",{id:"return-values-3"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," Mapping.")))),(0,r.kt)("h3",{id:"generatemappingkeystringaddress"},"generateMappingKey(string,address)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateMappingKey(\n    string memory firstWord,\n    address addr\n) internal pure returns (bytes32);\n")),(0,r.kt)("p",null,"Generates a data key of ",(0,r.kt)("inlineCode",{parentName:"p"},"keyType")," Mapping by hashing a string and concatenating it with an address."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"firstWord")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Used to generate a hash and its first 10 bytes are used for the first part of the data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," Mapping.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"addr")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Used for the last part of the data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," Mapping.")))),(0,r.kt)("h4",{id:"return-values-4"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," Mapping.")))),(0,r.kt)("h3",{id:"generatemappingkeybytes10bytes20"},"generateMappingKey(bytes10,bytes20)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateMappingKey(\n    bytes10 keyPrefix,\n    bytes20 bytes20Value\n) internal pure returns (bytes32);\n")),(0,r.kt)("p",null,"Generate a data key of ",(0,r.kt)("inlineCode",{parentName:"p"},"keyType")," Mapping by concatenating ",(0,r.kt)("inlineCode",{parentName:"p"},"keyPrefix")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"bytes20Value"),"."),(0,r.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"keyPrefix")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"First part of the data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," Mapping.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes20Value")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes20"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Second part of the data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," Mapping.")))),(0,r.kt)("h4",{id:"return-values-5"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," Mapping.")))),(0,r.kt)("h3",{id:"generatemappingwithgroupingkeystringstringaddress"},"generateMappingWithGroupingKey(string,string,address)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateMappingWithGroupingKey(\n    string memory firstWord,\n    string memory secondWord,\n    address addr\n) internal pure returns (bytes32);\n")),(0,r.kt)("p",null,"Generate a data key of ",(0,r.kt)("inlineCode",{parentName:"p"},"keyType")," MappingWithGrouping by concatenating the hash of the ",(0,r.kt)("inlineCode",{parentName:"p"},"firstWord"),", the hash of the ",(0,r.kt)("inlineCode",{parentName:"p"},"secondWord")," and an address."),(0,r.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"firstWord")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Used to generate a hash and its first 6 bytes are used for the first part of the data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," MappingWithGrouping.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"secondWord")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Used to generate a hash and its first 4 bytes are used for the second part of the data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," MappingWithGrouping.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"addr")),(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Used for the last part of the data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," MappingWithGrouping.")))),(0,r.kt)("h4",{id:"return-values-6"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," MappingWithGrouping.")))),(0,r.kt)("h3",{id:"generatemappingwithgroupingkeybytes10bytes20"},"generateMappingWithGroupingKey(bytes10,bytes20)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateMappingWithGroupingKey(\n    bytes10 keyPrefix,\n    bytes20 bytes20Value\n) internal pure returns (bytes32);\n")),(0,r.kt)("p",null,"Generate a data key of ",(0,r.kt)("inlineCode",{parentName:"p"},"keyType")," MappingWithGrouping by concatenating ",(0,r.kt)("inlineCode",{parentName:"p"},"keyPrefix")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"bytes20Value"),"."),(0,r.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"keyPrefix")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Used for the first part of the data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," MappingWithGrouping.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bytes20Value")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes20"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Used for the first last of the data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," MappingWithGrouping.")))),(0,r.kt)("h4",{id:"return-values-7"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Data key of ",(0,r.kt)("inlineCode",{parentName:"td"},"keyType")," MappingWithGrouping.")))),(0,r.kt)("h3",{id:"generatejsonurlvalue"},"generateJSONURLValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateJSONURLValue(\n    string memory hashFunction,\n    string memory json,\n    string memory url\n) internal pure returns (bytes memory key);\n")),(0,r.kt)("p",null,"Generate a JSONURL valueContent."),(0,r.kt)("h4",{id:"parameters-8"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"hashFunction")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The function used to hash the JSON file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"json")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Bytes value of the JSON file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"url")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The URL where the JSON file is hosted.")))),(0,r.kt)("h4",{id:"return-values-8"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JSON URL Value.")))),(0,r.kt)("h3",{id:"generateasseturlvalue"},"generateASSETURLValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateASSETURLValue(\n    string memory hashFunction,\n    string memory assetBytes,\n    string memory url\n) internal pure returns (bytes memory key);\n")),(0,r.kt)("p",null,"Generate a ASSETURL valueContent."),(0,r.kt)("h4",{id:"parameters-9"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"hashFunction")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The function used to hash the JSON file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"assetBytes")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Bytes value of the JSON file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"url")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The URL where the JSON file is hosted.")))),(0,r.kt)("h4",{id:"return-values-9"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"result")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ASSET URL Value.")))),(0,r.kt)("h3",{id:"isencodedarray"},"isEncodedArray"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isEncodedArray(\n    bytes memory data\n) internal pure returns (bool);\n")),(0,r.kt)("p",null,"Verifing if ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," is an encoded array"),(0,r.kt)("h4",{id:"parameters-10"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"data")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value that is to be verified.")))),(0,r.kt)("h3",{id:"isencodedarrayofaddresses"},"isEncodedArrayOfAddresses"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isEncodedArrayOfAddresses(\n    bytes memory data\n) internal pure returns (bool);\n")),(0,r.kt)("p",null,"Verifing if ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," is an encoded array of addresses (address[])"),(0,r.kt)("h4",{id:"parameters-11"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"data")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value that is to be verified.")))),(0,r.kt)("h3",{id:"isbytes4encodedarray"},"isBytes4EncodedArray"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isBytes4EncodedArray(\n    bytes memory data\n) internal pure returns (bool);\n")),(0,r.kt)("p",null,"Verify that ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," is an array of bytes4 (bytes4[]) encoded according to the Solidity ABI specs."),(0,r.kt)("h4",{id:"parameters-12"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"data")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value that is to be verified.")))),(0,r.kt)("h3",{id:"iscompactbytesarray"},"isCompactBytesArray"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isCompactBytesArray(\n    bytes memory compactBytesArray\n) internal pure returns (bool);\n")),(0,r.kt)("p",null,"Verify the validity of the ",(0,r.kt)("inlineCode",{parentName:"p"},"compactBytesArray")," according to LSP2."),(0,r.kt)("h4",{id:"parameters-13"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"compactBytesArray")),(0,r.kt)("td",{parentName:"tr",align:"left"},"bytes"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value that is to be verified.")))),(0,r.kt)("h3",{id:"uncheckedincrement"},"uncheckedIncrement"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uncheckedIncrement(\n    uint256 i\n) internal pure returns (uint256);\n")),(0,r.kt)("p",null,"Will return unchecked incremented uint256.\nCan be used to save gas when iterating over loops."),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/lsp-smart-contracts/tree/develop/contracts"},"Solidity implementations (GitHub)"))))}k.isMDXComponent=!0}}]);