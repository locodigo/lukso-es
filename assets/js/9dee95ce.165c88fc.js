"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[8992],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>m});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=n.createContext({}),c=function(e){var a=n.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},d=function(e){var a=c(e.components);return n.createElement(i.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},p=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,f=p["".concat(i,".").concat(m)]||p[m]||u[m]||s;return t?n.createElement(f,o(o({ref:a},d),{},{components:t})):n.createElement(f,o({ref:a},d))}));function m(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=p;var l={};for(var i in a)hasOwnProperty.call(a,i)&&(l[i]=a[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<s;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:(e,a,t)=>{t.d(a,{Z:()=>o});var n=t(7294),r=t(6010);const s="tabItem_Ymn6";function o(e){let{children:a,hidden:t,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(s,o),hidden:t},a)}},4866:(e,a,t)=>{t.d(a,{Z:()=>S});var n=t(7462),r=t(7294),s=t(6010),o=t(2466),l=t(6775),i=t(1980),c=t(7392),d=t(12);function u(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:r}}=e;return{value:a,label:t,attributes:n,default:r}}))}function p(e){const{values:a,children:t}=e;return(0,r.useMemo)((()=>{const e=a??u(t);return function(e){const a=(0,c.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function m(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function f(e){let{queryString:a=!1,groupId:t}=e;const n=(0,l.k6)(),s=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,i._X)(s),(0,r.useCallback)((e=>{if(!s)return;const a=new URLSearchParams(n.location.search);a.set(s,e),n.replace({...n.location,search:a.toString()})}),[s,n])]}function v(e){const{defaultValue:a,queryString:t=!1,groupId:n}=e,s=p(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:s}))),[i,c]=f({queryString:t,groupId:n}),[u,v]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[n,s]=(0,d.Nk)(t);return[n,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:n}),b=(()=>{const e=i??u;return m({value:e,tabValues:s})?e:null})();(0,r.useEffect)((()=>{b&&l(b)}),[b]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),v(e)}),[c,v,s]),tabValues:s}}var b=t(2389);const g="tabList__CuJ",k="tabItem_LNqP";function h(e){let{className:a,block:t,selectedValue:l,selectValue:i,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),p=e=>{const a=e.currentTarget,t=d.indexOf(a),n=c[t].value;n!==l&&(u(a),i(n))},m=e=>{var a;let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;t=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;t=d[a]??d[d.length-1];break}}null==(a=t)||a.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},a)},c.map((e=>{let{value:a,label:t,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===a?0:-1,"aria-selected":l===a,key:a,ref:e=>d.push(e),onKeyDown:m,onClick:p},o,{className:(0,s.Z)("tabs__item",k,null==o?void 0:o.className,{"tabs__item--active":l===a})}),t??a)})))}function P(e){let{lazy:a,children:t,selectedValue:n}=e;if(a){const e=t.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},t.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==n}))))}function w(e){const a=v(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",g)},r.createElement(h,(0,n.Z)({},e,a)),r.createElement(P,(0,n.Z)({},e,a)))}function S(e){const a=(0,b.Z)();return r.createElement(w,(0,n.Z)({key:String(a)},e))}},1393:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var n=t(7462),r=(t(7294),t(3905)),s=t(4866),o=t(5162);const l={sidebar_label:"Leer Datos de Activos",sidebar_position:4},i="Leer Datos de Activos",c={unversionedId:"es/guides/digital-assets/read-asset-data",id:"es/guides/digital-assets/read-asset-data",title:"Leer Datos de Activos",description:"En esta gu\xeda, aprenderemos c\xf3mo:",source:"@site/docs/es/guides/digital-assets/read-asset-data.md",sourceDirName:"es/guides/digital-assets",slug:"/es/guides/digital-assets/read-asset-data",permalink:"/lukso-es/es/guides/digital-assets/read-asset-data",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/es/guides/digital-assets/read-asset-data.md",tags:[],version:"current",lastUpdatedAt:1681103476,formattedLastUpdatedAt:"10 abr 2023",sidebarPosition:4,frontMatter:{sidebar_label:"Leer Datos de Activos",sidebar_position:4},sidebar:"guidesSidebar",previous:{title:"Transferir un Activo Digital LSP7 (Token)",permalink:"/lukso-es/es/guides/digital-assets/transfer-lsp7-digital-asset"},next:{title:"Crear una B\xf3veda",permalink:"/lukso-es/es/guides/vault/create-a-vault"}},d={},u=[{value:"Configuraci\xf3n",id:"configuraci\xf3n",level:2},{value:"Paso 1 - Obtener todos los bienes en propiedad",id:"paso-1---obtener-todos-los-bienes-en-propiedad",level:2},{value:"Paso 2 - Obtener los metadatos del activo",id:"paso-2---obtener-los-metadatos-del-activo",level:2},{value:"C\xf3digo final",id:"c\xf3digo-final",level:2}],p={toc:u};function m(e){let{components:a,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,l,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"leer-datos-de-activos"},"Leer Datos de Activos"),(0,r.kt)("p",null,"En esta gu\xeda, aprenderemos c\xf3mo:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Obtener todos los activos propiedad de un Perfil Universal."),(0,r.kt)("li",{parentName:"ul"},"Obtener los metadatos de todos los activos en cartera.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Un archivo JS completo ",(0,r.kt)("em",{parentName:"p"},'"listo para usar"')," est\xe1 disponible al final en la secci\xf3n ",(0,r.kt)("a",{parentName:"p",href:"#final-code"},(0,r.kt)("strong",{parentName:"a"},"C\xf3digo Final")),". Si deseas ejecutar el c\xf3digo como archivos JavaScript independientes dentro de la terminal o el navegador, puedes abrir el repositorio ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lukso-playground"},(0,r.kt)("inlineCode",{parentName:"a"},"lukso-playground"))," o utilizar la p\xe1gina correlacionada ",(0,r.kt)("a",{parentName:"p",href:"https://stackblitz.com/github/lukso-network/lukso-playground"},"StackBlitz"),".")),(0,r.kt)("div",{style:{textAlign:"center",color:"grey"}},(0,r.kt)("img",{src:t(9964).Z,alt:"Asset example on universalprofile.cloud"}),(0,r.kt)("br",null),(0,r.kt)("i",null,"El activo ",(0,r.kt)("a",{href:"https://universalprofile.cloud/asset/0xbD14F48DDDe851b812D95431906E629fb9514Db4"},"Lambada Dyed Red White Blue")," como se muestra en UniversalProfile.cloud")),(0,r.kt)("p",null,"Utilizaremos:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://web3js.readthedocs.io/en/v1.7.0/"},"web3.js")," para la utilidad as\xed como la conexi\xf3n a la red LUKSO L14 o L16."),(0,r.kt)("li",{parentName:"ul"},"librer\xeda ",(0,r.kt)("a",{parentName:"li",href:"../../tools/erc725js/getting-started/"},"erc725.js")," para obtener los metadatos de los activos."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/lsp-smart-contracts"},"lsp-smart-contracts")," para integrar las ABI de los est\xe1ndares LUKSO.")),(0,r.kt)("h2",{id:"configuraci\xf3n"},"Configuraci\xf3n"),(0,r.kt)("p",null,"Abre una terminal en la carpeta del proyecto que elijas e instala todas las librer\xedas necesarias."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npm install web3 @erc725/erc725.js @lukso/lsp-smart-contracts\n")),(0,r.kt)("h2",{id:"paso-1---obtener-todos-los-bienes-en-propiedad"},"Paso 1 - Obtener todos los bienes en propiedad"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Current Standard",label:"Current Standard",mdxType:"TabItem"},(0,r.kt)("p",null,"En la gu\xeda ",(0,r.kt)("a",{parentName:"p",href:"../universal-profile/read-profile-data"},(0,r.kt)("strong",{parentName:"a"},"Leer datos del perfil")),", aprendimos a leer las propiedades del Perfil Universal y a utilizar los nombres de las claves de datos con la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"fetchData()")," de la librer\xeda ",(0,r.kt)("a",{parentName:"p",href:"../../tools/erc725js/getting-started/"},"erc725.js"),". Del mismo modo, ahora podemos obtener todos los activos que posee el Perfil Universal llamando a ",(0,r.kt)("inlineCode",{parentName:"p"},"fetchData")," y pasando la clave ",(0,r.kt)("inlineCode",{parentName:"p"},"LSP5ReceivedAssets[]"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Este mismo m\xe9todo tambi\xe9n se puede utilizar para obtener todos los activos que ha emitido un Perfil Universal mediante la clave ",(0,r.kt)("inlineCode",{parentName:"p"},"LSP12IssuedAssets[]"),".")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Si utilizas erc725.js en un entorno NodeJS puede que necesites instalar e importar ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/isomorphic-fetch"},(0,r.kt)("inlineCode",{parentName:"a"},"isomorphic-fetch"))," para utilizar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"fetchData()"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="read_assets.js"',title:'"read_assets.js"'},"// Importaci\xf3n y Configuraci\xf3n de red\nimport { ERC725 } from '@erc725/erc725.js';\nimport UniversalProfileSchema from '@erc725/erc725.js/schemas/LSP3UniversalProfileMetadata.json';\nimport Web3 from 'web3';\n\n// Variables est\xe1ticas\nconst SAMPLE_PROFILE_ADDRESS = '0xa907c1904c22DFd37FF56c1f3c3d795682539196';\nconst RPC_ENDPOINT = 'https://rpc.l16.lukso.network';\nconst IPFS_GATEWAY = 'https://2eff.lukso.dev/ipfs/';\n\n// Par\xe1metros para la instancia ERC725\nconst provider = new Web3.providers.HttpProvider(RPC_ENDPOINT);\nconst config = { ipfsGateway: IPFS_GATEWAY };\n\n// Consultar los datos LSP5 del Perfil Universal para obtener los activos que posee.\nconst profile = new ERC725(\n  UniversalProfileSchema,\n  SAMPLE_PROFILE_ADDRESS,\n  provider,\n  config,\n);\n\nconst result = await profile.fetchData('LSP5ReceivedAssets[]');\nconst ownedAssets = result.value;\n\nconsole.log(ownedAssets);\n"))),(0,r.kt)(o.Z,{value:"Legacy Standard",label:"Legacy Standard",mdxType:"TabItem"},(0,r.kt)("p",null,"En la ",(0,r.kt)("a",{parentName:"p",href:"../universal-profile/read-profile-data"},"gu\xeda anterior"),", aprendimos a leer las propiedades del perfil universal y a utilizar los nombres de las claves de datos con la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"fetchData()")," de la librer\xeda ",(0,r.kt)("a",{parentName:"p",href:"../../tools/erc725js/getting-started/"},"erc725.js"),". Del mismo modo, ahora podemos obtener la direcci\xf3n del ",(0,r.kt)("a",{parentName:"p",href:"../../standards/generic-standards/lsp1-universal-receiver/"},"Receptor Universal")," utilizando ",(0,r.kt)("inlineCode",{parentName:"p"},'fetchData("LSP1UniversalReceiverDelegate")'),"."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Si utilizas erc725.js en un entorno NodeJS puede que necesites instalar e importar ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/isomorphic-fetch"},(0,r.kt)("inlineCode",{parentName:"a"},"isomorphic-fetch"))," para utilizar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"fetchData()"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="read_assets.js"',title:'"read_assets.js"'},"// Importaci\xf3n y Configuraci\xf3n de red\nimport { ERC725 } from '@erc725/erc725.js';\nimport UniversalProfileSchema from '@erc725/erc725.js/schemas/LSP3UniversalProfileMetadata.json';\nimport Web3 from 'web3';\n\n// Variables est\xe1ticas\nconst SAMPLE_PROFILE_ADDRESS = '0x0C03fBa782b07bCf810DEb3b7f0595024A444F4e';\nconst RPC_ENDPOINT = 'https://rpc.l14.lukso.network';\nconst IPFS_GATEWAY = 'https://2eff.lukso.dev/ipfs/';\n\n// Par\xe1metros para la instancia ERC725\nconst provider = new Web3.providers.HttpProvider(RPC_ENDPOINT);\nconst config = { ipfsGateway: IPFS_GATEWAY };\n\n// Consultar los datos LSP5 del Perfil Universal para obtener los activos que posee.\nconst profile = new ERC725(\n  UniversalProfileSchema,\n  SAMPLE_PROFILE_ADDRESS,\n  provider,\n  config,\n);\n\nconst result = await profile.fetchData('LSP1UniversalReceiverDelegate');\nconst universalReceiverAddress = result.value;\n")),(0,r.kt)("p",null,"Usando la direcci\xf3n del Receptor Delegado Universal, ahora podemos llamar a la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"getAllRawValues()")," en este contrato para recuperar un conjunto de activos recibidos."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"LSP1 ABI Legacy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="lsp1_legacy_minimal_abi.json"',title:'"lsp1_legacy_minimal_abi.json"'},'[\n  {\n    "inputs": [],\n    "name": "getAllRawValues",\n    "outputs": [\n      {\n        "internalType": "bytes32[]",\n        "name": "",\n        "type": "bytes32[]"\n      }\n    ],\n    "stateMutability": "view",\n    "type": "function"\n  }\n]\n'))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="read_assets.js"',title:'"read_assets.js"'},"// ABI para el Receptor Delegado Universal\nimport LSP1MinimalABI from './lsp1_legacy_minimal_abi.json';\n\n// ...\n\nconst web3 = new Web3('https://rpc.l14.lukso.network');\n\n// Obtener todos los activos recibidos desde el Receptor Delegado Universal del Perfil Universal.\nconst universalReceiver = new web3.eth.Contract(\n  LSP1MinimalABI,\n  receiverAddress,\n);\n\n\n// Consultar todos los valores brutos\nconst rawValues = await universalReceiver.methods.getAllRawValues().call();\n\n// Convertir valores brutos en direcciones\nconst receivedAssets = rawValues.map((returnedRawValue) => {\n  return web3.utils.toChecksumAddress(returnedRawValue.substr(26));\n});\n\nconsole.log(receivedAssets),\n\n")))),(0,r.kt)("h2",{id:"paso-2---obtener-los-metadatos-del-activo"},"Paso 2 - Obtener los metadatos del activo"),(0,r.kt)("p",null,"Ahora podemos recuperar los metadatos de la direcci\xf3n del activo. Los metadatos ",(0,r.kt)("a",{parentName:"p",href:"../../standards/nft-2.0/LSP4-Digital-Asset-Metadata"},"LSP4")," se guardan en el almac\xe9n de valores clave ERC725Y del activo digital. Debemos introducir la clave de datos correcta para obtener el valor asociado. Existen varias ",(0,r.kt)("a",{parentName:"p",href:"../../standards/nft-2.0/LSP4-Digital-Asset-Metadata"},"claves LSP4")," para distintas propiedades."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"LSP4TokenName")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"LSP4TokenSymbol")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"LSP4Metadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"LSP4Creators[]"))),(0,r.kt)("p",null,"En esta gu\xeda, utilizaremos la clave ",(0,r.kt)("inlineCode",{parentName:"p"},"LSP4Metadata")," para leer los metadatos de los activos."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="read_assets.js"',title:'"read_assets.js"'},"// ABIs\nimport LSP4schema from '@erc725/erc725.js/schemas/LSP4DigitalAsset.json';\n\n// ...\n\n// Instanciar el activo\nconst digitalAsset = new ERC725(LSP4Schema, ownedAssets[0], provider, config);\n\n// Obtener los datos cifrados\nconst decodedAssetMetadata = await digitalAsset.fetchData('LSP4Metadata');\n")),(0,r.kt)("p",null,"Para obtener los metadatos de todos los activos en propiedad, podemos iterar a trav\xe9s del conjunto ",(0,r.kt)("inlineCode",{parentName:"p"},"ownedAssets"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const ownedAssetsMetadata = await ownedAssets.map(async (ownedAsset) => {\n  const digitalAsset = new ERC725(LSP4Schema, ownedAsset, provider, config);\n\n  return await digitalAsset.fetchData('LSP4Metadata');\n});\n")),(0,r.kt)("h2",{id:"c\xf3digo-final"},"C\xf3digo final"),(0,r.kt)("p",null,"A continuaci\xf3n se muestra el fragmento de c\xf3digo completo de esta gu\xeda, con todos los pasos compilados juntos."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Current Standards",label:"Current Standards",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="read_assets.js"',title:'"read_assets.js"'},"// Importaci\xf3n y Configuraci\xf3n de red\nimport { ERC725 } from '@erc725/erc725.js';\nimport UniversalProfileSchema from '@erc725/erc725.js/schemas/LSP3UniversalProfileMetadata.json';\nimport LSP4Schema from '@erc725/erc725.js/schemas/LSP4DigitalAsset.json';\nimport Web3 from 'web3';\n\n// Variables est\xe1ticas\nconst SAMPLE_PROFILE_ADDRESS = '0xa907c1904c22DFd37FF56c1f3c3d795682539196';\nconst RPC_ENDPOINT = 'https://rpc.l16.lukso.network';\nconst IPFS_GATEWAY = 'https://2eff.lukso.dev/ipfs/';\n\n// Par\xe1metros para la instancia ERC725\nconst provider = new Web3.providers.HttpProvider(RPC_ENDPOINT);\nconst config = { ipfsGateway: IPFS_GATEWAY };\n\n// Consultar los datos LSP5 del Perfil Universal para obtener los activos que posee.\nconst profile = new ERC725(\n  UniversalProfileSchema,\n  SAMPLE_PROFILE_ADDRESS,\n  provider,\n  config,\n);\n\nconst result = await profile.fetchData('LSP5ReceivedAssets[]');\nconst ownedAssets = result.value;\n\nconst ownedAssetsMetadata = await ownedAssets.map(async (ownedAsset) => {\n  // Instanciar el activo\n  const digitalAsset = new ERC725(LSP4Schema, ownedAsset, provider, config);\n\n  // Obtener los datos cifrados\n  return await digitalAsset.fetchData('LSP4Metadata');\n});\n\nconsole.log(ownedAssetsMetadata);\n"))),(0,r.kt)(o.Z,{value:"Legacy Standards",label:"Legacy Standards",mdxType:"TabItem"},(0,r.kt)("details",null,(0,r.kt)("summary",null,"LSP1 ABI Legacy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="lsp1_legacy_minimal_abi.json"',title:'"lsp1_legacy_minimal_abi.json"'},'[\n  {\n    "inputs": [],\n    "name": "getAllRawValues",\n    "outputs": [\n      {\n        "internalType": "bytes32[]",\n        "name": "",\n        "type": "bytes32[]"\n      }\n    ],\n    "stateMutability": "view",\n    "type": "function"\n  }\n]\n'))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="read_assets.js"',title:'"read_assets.js"'},"// Importaci\xf3n y Configuraci\xf3n de red\nimport { ERC725 } from '@erc725/erc725.js';\nimport UniversalProfileSchema from '@erc725/erc725.js/schemas/LSP3UniversalProfileMetadata.json';\nimport LSP4Schema from '@erc725/erc725.js/schemas/LSP4DigitalAsset.json';\nimport Web3 from 'web3';\nimport LSP1MinimalABI from './lsp1_legacy_minimal_abi.json';\n\n// Variables est\xe1ticas\nconst SAMPLE_PROFILE_ADDRESS = '0x0C03fBa782b07bCf810DEb3b7f0595024A444F4e';\nconst RPC_ENDPOINT = 'https://rpc.l14.lukso.network';\nconst IPFS_GATEWAY = 'https://2eff.lukso.dev/ipfs/';\n\n// Par\xe1metros para la instancia ERC725\nconst provider = new Web3.providers.HttpProvider(RPC_ENDPOINT);\nconst config = { ipfsGateway: IPFS_GATEWAY };\n\n// Consultar los datos LSP5 del Perfil Universal para obtener los activos que posee.\nconst profile = new ERC725(\n  UniversalProfileSchema,\n  SAMPLE_PROFILE_ADDRESS,\n  provider,\n  config,\n);\n\nconst result = await profile.fetchData('LSP1UniversalReceiverDelegate');\nconst universalReceiverAddress = result.value;\n\nconst web3 = new Web3(RPC_ENDPOINT);\n\n// Obtener todos los activos recibidos desde el Receptor Delegado Universal del Perfil Universal.\nconst universalReceiver = new web3.eth.Contract(\n  LSP1MinimalABI,\n  receiverAddress,\n);\n\n// Consultar todos los valores brutos\nconst rawValues = await universalReceiver.methods.getAllRawValues().call();\n\n// Convertir valores brutos en direcciones\nconst ownedAssets = rawValues.map((returnedRawValue) => {\n  return web3.utils.toChecksumAddress(returnedRawValue.substr(26));\n});\n\nconst ownedAssetsMetadata = await ownedAssets.map(async (ownedAsset) => {\n  // Instanciar el activo\n  const digitalAsset = new ERC725(LSP4Schema, ownedAsset, provider, config);\n\n  // Obtener los datos cifrados\n  return await digitalAsset.fetchData('LSP4Metadata');\n});\n\nconsole.log(ownedAssetsMetadata);\n")))))}m.isMDXComponent=!0},9964:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/example-asset-dd5a54e12a4dd980896dc69d4d2633d7.png"}}]);