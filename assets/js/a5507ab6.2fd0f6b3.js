"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[4100],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(a),m=r,f=p["".concat(o,".").concat(m)]||p[m]||d[m]||s;return a?n.createElement(f,i(i({ref:t},c),{},{components:a})):n.createElement(f,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=p;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<s;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const s="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(s,i),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>w});var n=a(7462),r=a(7294),s=a(6010),i=a(2466),l=a(6775),o=a(1980),u=a(7392),c=a(12);function d(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function p(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const n=(0,l.k6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,o._X)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})}),[s,n])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,s=p(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[o,u]=f({queryString:a,groupId:n}),[d,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,s]=(0,c.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:n}),b=(()=>{const e=o??d;return m({value:e,tabValues:s})?e:null})();(0,r.useEffect)((()=>{b&&l(b)}),[b]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),h(e)}),[u,h,s]),tabValues:s}}var b=a(2389);const g="tabList__CuJ",y="tabItem_LNqP";function k(e){let{className:t,block:a,selectedValue:l,selectValue:o,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==l&&(d(t),o(n))},m=e=>{var t;let a=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;a=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;a=c[t]??c[c.length-1];break}}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},i,{className:(0,s.Z)("tabs__item",y,null==i?void 0:i.className,{"tabs__item--active":l===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:n}=e;if(t){const e=a.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function N(e){const t=h(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",g)},r.createElement(k,(0,n.Z)({},e,t)),r.createElement(v,(0,n.Z)({},e,t)))}function w(e){const t=(0,b.Z)();return r.createElement(N,(0,n.Z)({key:String(t)},e))}},6823:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var n=a(7462),r=(a(7294),a(3905)),s=a(4866),i=a(5162);const l={title:"\ud83d\udcec Relayer API",sidebar_position:9},o="Transaction Relay Service API Standard",u={unversionedId:"es/standards/relayer-api",id:"es/standards/relayer-api",title:"\ud83d\udcec Relayer API",description:"POST /execute",source:"@site/docs/es/standards/relayer-api.md",sourceDirName:"es/standards",slug:"/es/standards/relayer-api",permalink:"/lukso-es/es/standards/relayer-api",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/es/standards/relayer-api.md",tags:[],version:"current",lastUpdatedAt:1680197874,formattedLastUpdatedAt:"30 mar 2023",sidebarPosition:9,frontMatter:{title:"\ud83d\udcec Relayer API",sidebar_position:9},sidebar:"standardsSidebar",previous:{title:"LSP10Utils",permalink:"/lukso-es/es/standards/smart-contracts/utils/lsp10-received-vaults-utils"},next:{title:"\ud83c\udd99 RPC API",permalink:"/lukso-es/es/standards/rpc-api"}},c={},d=[{value:"POST <code>/execute</code>",id:"post-execute",level:2},{value:"POST <code>/quota</code>",id:"post-quota",level:2},{value:"Resources",id:"resources",level:2}],p={toc:d};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"transaction-relay-service-api-standard"},"Transaction Relay Service API Standard"),(0,r.kt)("h2",{id:"post-execute"},"POST ",(0,r.kt)("inlineCode",{parentName:"h2"},"/execute")),(0,r.kt)("p",null,"Executes a signed transaction on behalf of a Universal Profile using ",(0,r.kt)("a",{parentName:"p",href:"./smart-contracts/lsp6-key-manager#executerelaycall"},(0,r.kt)("inlineCode",{parentName:"a"},"executeRelayCall()")),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use signed message provided in request for authentication."),(0,r.kt)("li",{parentName:"ul"},"Calculate and return the transaction hash in response.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Request body"',title:'"Request','body"':!0},'{\n  "address": "0xBB645D97B0c7D101ca0d73131e521fe89B463BFD", // Address of the Universal Profile\n  "transaction": {\n    "abi": "0x7f23690c5ef83ad9559033e6e941db7d7c495acdce616347d28e90c7ce47cbfcfcad3bc5000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000596f357c6aa5a21984a83b7eef4cb0720ac1fcf5a45e9d84c653d97b71bbe89b7a728c386a697066733a2f2f516d624b43744b4d7573376741524470617744687a32506a4e36616f64346b69794e436851726d3451437858454b00000000000000",\n    "signature": "0x43c958b1729586749169599d7e776f18afc6223c7da21107161477d291d497973b4fc50a724b1b2ab98f3f8cf1d5cdbbbdf3512e4fbfbdc39732229a15beb14a1b",\n    "nonce": 1 // KeyManager nonce\n  }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{\n  "transactionHash": "0xBB645D97B0c7D101ca0d73131e521fe89B463BFD"\n}\n')),(0,r.kt)("h2",{id:"post-quota"},"POST ",(0,r.kt)("inlineCode",{parentName:"h2"},"/quota")),(0,r.kt)("p",null,"Returns the available quota left for a registered Universal Profile."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"signature")," is the message value signed by a controller key with the ",(0,r.kt)("a",{parentName:"li",href:"./universal-profile/lsp6-key-manager#permissions"},(0,r.kt)("inlineCode",{parentName:"a"},"SIGN")," permission")," of the Universal Profile. The hash to sign should be calculated as ",(0,r.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-712"},"EIP-712")," hash where the message is ",(0,r.kt)("inlineCode",{parentName:"li"},"keccack256(address, timestamp)"),". Make sure that no matter the language or platform timestamp is of type ",(0,r.kt)("inlineCode",{parentName:"li"},"int"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"int256"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"uint")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"uint256"),". In the backend the message is reconstructed using ",(0,r.kt)("a",{parentName:"li",href:"https://web3js.readthedocs.io/en/v1.7.4/web3-utils.html#soliditysha3"},"soliditysha3()")," to verify the signature.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://web3js.readthedocs.io/en/v1.8.0/web3-eth-accounts.html?#sign"},"Web3.js")," and ",(0,r.kt)("a",{parentName:"p",href:"https://docs.ethers.io/v5/api/signer/#Signer-signMessage"},"ethers.js")," both automatically hash when using their native sign functions. This may need to be done manually if using a different library."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timestamp")," in ",(0,r.kt)("strong",{parentName:"li"},"seconds"),". Must be now +/- 5 seconds.")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"How to generate and verify the signature."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"web3",label:"Web3",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { soliditySha3 } from 'web3-utils';\nimport Web3 from 'web3';\n\nconst address = '0x1234...'; // The Universal Profile address\nconst timestamp = Math.round(Date.now() / 1000);\n\nconst message = soliditySha3(address, timestamp);\n\n/**\n *  Generate the signature - client side\n */\nconst web3 = new Web3();\nconst privateKey = '0x123...'; // The private key of the EOA which has SIGN permission over the Universal Profile defined in address.\nconst signature = web3.eth.accounts.sign(message, privateKey).signature;\n// \ud83d\udc49 This signature is used in the request payload.\n\n/**\n * Verify the signature - relayer side\n */\nconst signer = web3.eth.accounts.recover(message, signature.signature); // Signer will be the EOA that has signed the message.\n// You need to verify if this EOA has a SIGN permission on the Universal Profile defined in address.\n"))),(0,r.kt)(i.Z,{value:"ethers",label:"Ethers",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// ...\n\nconst address = '0x1234...'; // The Universal Profile address\nconst timestamp = Math.round(Date.now() / 1000);\n\nconst message = ethers.utils.solidityKeccak256(\n  ['address', 'uint'],\n  [address, timestamp],\n);\n\n/**\n *  Generate the signature - client side\n */\n// [... ethers signer setup...]\nconst signature = await ethersSigner.signMessage(arrayify(message));\n// \ud83d\udc49 This signature is used in the request payload.\n\n/**\n * Verify the signature - relayer side\n */\nconst signer = ethers.utils.verifyMessage(arrayify(message), signature); // Signer will be the EOA that has signed the message.\n// You need to verify if this EOA has a SIGN permission on the Universal Profile defined in address.\n")))),(0,r.kt)("p",null,"To verify if the signature was signed by an authorized EOA, please refer to the ",(0,r.kt)("a",{parentName:"p",href:"../guides/browser-extension/sign-in-with-ethereum#4-verify-the-signature"},"Sign-In With Ethereum")," guide.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Request body"',title:'"Request','body"':!0},'{\n  "address": "0xBB645D97B0c7D101ca0d73131e521fe89B463BFD",\n  "timestamp": 1656408193,\n  "signature": "0xf480c87a352d42e49112257cc6afab0ff8365bb769424bb42e79e78cd11debf24fd5665b03407d8c2ce994cf5d718031a51a657d4308f146740e17e15b9747ef1b"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{\n  "quota": 1543091, // You have YYY left\n  "unit": "gas", // could be "lyx", "transactionCount"\n  "totalQuota": 5000000, // total gas for the month\n  "resetDate": 1656408193\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"quota")," shows available balance left in units defined by ",(0,r.kt)("inlineCode",{parentName:"li"},"unit"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"unit")," could be ",(0,r.kt)("inlineCode",{parentName:"li"},"gas"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"lyx")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"transactionCount")," depending on the business model."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"totalQuota")," reflects total limit. i.e. available + used quota since reset."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"resetDate")," gives date that available quota will reset, e.g. a monthly allowance.")),(0,r.kt)("p",null,"Quota systems could also use a Pay As You Go model, in which case totalQuota and resetData can be omitted."),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/LIPs/pull/133"},"LSP-15-TransactionRelayerAPI (GitHub)"))))}m.isMDXComponent=!0}}]);