"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[3112],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>m});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=n.createContext({}),c=function(e){var a=n.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},d=function(e){var a=c(e.components);return n.createElement(i.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},p=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,v=p["".concat(i,".").concat(m)]||p[m]||u[m]||l;return t?n.createElement(v,s(s({ref:a},d),{},{components:t})):n.createElement(v,s({ref:a},d))}));function m(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,s=new Array(l);s[0]=p;var o={};for(var i in a)hasOwnProperty.call(a,i)&&(o[i]=a[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var c=2;c<l;c++)s[c]=t[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:(e,a,t)=>{t.d(a,{Z:()=>s});var n=t(7294),r=t(6010);const l="tabItem_Ymn6";function s(e){let{children:a,hidden:t,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,s),hidden:t},a)}},4866:(e,a,t)=>{t.d(a,{Z:()=>P});var n=t(7462),r=t(7294),l=t(6010),s=t(2466),o=t(6775),i=t(1980),c=t(7392),d=t(12);function u(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:r}}=e;return{value:a,label:t,attributes:n,default:r}}))}function p(e){const{values:a,children:t}=e;return(0,r.useMemo)((()=>{const e=a??u(t);return function(e){const a=(0,c.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function m(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function v(e){let{queryString:a=!1,groupId:t}=e;const n=(0,o.k6)(),l=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,i._X)(l),(0,r.useCallback)((e=>{if(!l)return;const a=new URLSearchParams(n.location.search);a.set(l,e),n.replace({...n.location,search:a.toString()})}),[l,n])]}function f(e){const{defaultValue:a,queryString:t=!1,groupId:n}=e,l=p(e),[s,o]=(0,r.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:l}))),[i,c]=v({queryString:t,groupId:n}),[u,f]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[n,l]=(0,d.Nk)(t);return[n,(0,r.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:n}),g=(()=>{const e=i??u;return m({value:e,tabValues:l})?e:null})();(0,r.useEffect)((()=>{g&&o(g)}),[g]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),f(e)}),[c,f,l]),tabValues:l}}var g=t(2389);const k="tabList__CuJ",b="tabItem_LNqP";function C(e){let{className:a,block:t,selectedValue:o,selectValue:i,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.o5)(),p=e=>{const a=e.currentTarget,t=d.indexOf(a),n=c[t].value;n!==o&&(u(a),i(n))},m=e=>{var a;let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;t=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;t=d[a]??d[d.length-1];break}}null==(a=t)||a.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":t},a)},c.map((e=>{let{value:a,label:t,attributes:s}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:o===a?0:-1,"aria-selected":o===a,key:a,ref:e=>d.push(e),onKeyDown:m,onClick:p},s,{className:(0,l.Z)("tabs__item",b,null==s?void 0:s.className,{"tabs__item--active":o===a})}),t??a)})))}function y(e){let{lazy:a,children:t,selectedValue:n}=e;if(a){const e=t.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},t.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==n}))))}function h(e){const a=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",k)},r.createElement(C,(0,n.Z)({},e,a)),r.createElement(y,(0,n.Z)({},e,a)))}function P(e){const a=(0,g.Z)();return r.createElement(h,(0,n.Z)({key:String(a)},e))}},2122:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var n=t(7462),r=(t(7294),t(3905)),l=t(4866),s=t(5162);const o={sidebar_label:"Interactuar con Contratos",sidebar_position:3},i="Interactuar con Contratos",c={unversionedId:"es/guides/vault/interact-with-contracts",id:"es/guides/vault/interact-with-contracts",title:"Interactuar con Contratos",description:"Al igual que en nuestra gu\xeda anterior sobre la configuraci\xf3n de datos en la B\xf3veda, en esta gu\xeda aprenderemos a interactuar con otros contratos a trav\xe9s de la funci\xf3n de ejecuci\xf3n de la B\xf3veda.",source:"@site/docs/es/guides/vault/interact-with-contracts.md",sourceDirName:"es/guides/vault",slug:"/es/guides/vault/interact-with-contracts",permalink:"/lukso-es/es/guides/vault/interact-with-contracts",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/es/guides/vault/interact-with-contracts.md",tags:[],version:"current",lastUpdatedAt:1680495619,formattedLastUpdatedAt:"3 abr 2023",sidebarPosition:3,frontMatter:{sidebar_label:"Interactuar con Contratos",sidebar_position:3},sidebar:"guidesSidebar",previous:{title:"Editar datos de una B\xf3veda",permalink:"/lukso-es/es/guides/vault/edit-vault-data"},next:{title:"Restringir las Direcciones a las B\xf3vedas",permalink:"/lukso-es/es/guides/vault/restrict-addresses-to-vaults"}},d={},u=[{value:"Configuraci\xf3n",id:"configuraci\xf3n",level:2},{value:"Paso 1 - Configuraci\xf3n de importaciones y constantes",id:"paso-1---configuraci\xf3n-de-importaciones-y-constantes",level:2},{value:"Paso 2 - Crear las instancias de los contratos",id:"paso-2---crear-las-instancias-de-los-contratos",level:2},{value:"Step 3 - Encode the calldatas",id:"step-3---encode-the-calldatas",level:2},{value:"Cifrar los calldata del Contrato de Destino",id:"cifrar-los-calldata-del-contrato-de-destino",level:3},{value:"Cifrar los calldata de la B\xf3veda",id:"cifrar-los-calldata-de-la-b\xf3veda",level:3},{value:"Cifrar calldata de Perfil Universal",id:"cifrar-calldata-de-perfil-universal",level:3},{value:"Paso 4 - Ejecutar a trav\xe9s del Gestor de Claves",id:"paso-4---ejecutar-a-trav\xe9s-del-gestor-de-claves",level:2},{value:"C\xf3digo final",id:"c\xf3digo-final",level:2}],p={toc:u};function m(e){let{components:a,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,o,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"interactuar-con-contratos"},"Interactuar con Contratos"),(0,r.kt)("p",null,"Al igual que en nuestra ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/lukso-es/es/guides/vault/edit-vault-data"},"gu\xeda anterior"))," sobre la configuraci\xf3n de datos en la B\xf3veda, en esta gu\xeda aprenderemos a ",(0,r.kt)("strong",{parentName:"p"},"interactuar con otros contratos")," a trav\xe9s de la funci\xf3n de ejecuci\xf3n de la B\xf3veda."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Esta gu\xeda tambi\xe9n es muy similar a la gu\xeda: ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/es/guides/universal-profile/interact-with-contracts"},(0,r.kt)("strong",{parentName:"a"},"Interactuar con un contrato utilizando un Perfil Universal")),".")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Flujo de interacci\xf3n"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Gu\xeda - Interactuar con otros contratos usando una B\xf3veda",src:t(8509).Z,width:"10762",height:"2432"})),(0,r.kt)("h2",{id:"configuraci\xf3n"},"Configuraci\xf3n"),(0,r.kt)("p",null,"Para completar esta mini-gu\xeda, necesitaremos:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"una EOA con algunos LYX para las cuotas de gas y los ","[",(0,r.kt)("strong",{parentName:"li"},"permisos"),"]"," necesarios(../../standards/universal-profile/lsp6-key-manager.md#permissions) para la interacci\xf3n."),(0,r.kt)("li",{parentName:"ul"},"los contratos ABI ",(0,r.kt)("inlineCode",{parentName:"li"},"UniversalProfile"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"LSP6KeyManager")," y ",(0,r.kt)("inlineCode",{parentName:"li"},"LSP9Vault")," del paquete npm ",(0,r.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@lukso/lsp-smart-contracts"},(0,r.kt)("inlineCode",{parentName:"a"},"@lukso/lsp-smart-contracts")),"."),(0,r.kt)("li",{parentName:"ul"},"la direcci\xf3n del perfil universal."),(0,r.kt)("li",{parentName:"ul"},"la direcci\xf3n de la B\xf3veda LSP9."),(0,r.kt)("li",{parentName:"ul"},"la ABI ",(0,r.kt)("inlineCode",{parentName:"li"},"targetContract"),"."),(0,r.kt)("li",{parentName:"ul"},"la direcci\xf3n del Target Contract.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"La EOA elegida debe tener ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/es/standards/universal-profile/lsp6-key-manager#permissions"},(0,r.kt)("strong",{parentName:"a"},"CALL Permission"))," junto con ","[",(0,r.kt)("strong",{parentName:"p"},"AllowedCalls"),"]","(../.. /standards/universal-profile/lsp6-key-manager.md#allowed-calls) o ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/es/standards/universal-profile/lsp6-key-manager#super-permissions"},(0,r.kt)("strong",{parentName:"a"},"SUPER_CALL Pemrission")))),(0,r.kt)("p",null,"Aseg\xfarate de tener instaladas las siguientes dependencias antes de empezar este tutorial."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"O bien ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/web3/web3.js"},(0,r.kt)("inlineCode",{parentName:"a"},"web3.js"))," o bien ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/ethers-io/ethers.js/"},(0,r.kt)("inlineCode",{parentName:"a"},"ethers.js"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/lsp-smart-contracts/"},(0,r.kt)("inlineCode",{parentName:"a"},"@lukso/lsp-smart-contracts")))),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"web3js",label:"web3.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Instala las dependencias"',title:'"Instala',las:!0,'dependencias"':!0},"npm install web3 @lukso/lsp-smart-contracts\n"))),(0,r.kt)(s.Z,{value:"ethersjs",label:"ethers.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Instala las dependencias"',title:'"Instala',las:!0,'dependencias"':!0},"npm install ethers @lukso/lsp-smart-contracts\n")))),(0,r.kt)("h2",{id:"paso-1---configuraci\xf3n-de-importaciones-y-constantes"},"Paso 1 - Configuraci\xf3n de importaciones y constantes"),(0,r.kt)("p",null,"En este paso importaremos los ",(0,r.kt)("strong",{parentName:"p"},"contract ABIs")," necesarios y guardaremos todas las ",(0,r.kt)("strong",{parentName:"p"},"direcciones requeridas")," en constantes.",(0,r.kt)("br",{parentName:"p"}),"\n","Tambi\xe9n inicializaremos nuestra ",(0,r.kt)("strong",{parentName:"p"},"EOA")," para su uso posterior."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Guarda la ABI del Contrato de Destino en un json separado e imp\xf3rtalo en el archivo principal.",(0,r.kt)("br",{parentName:"p"}),"\n","Puedes compilar r\xe1pidamente y obtener el ABI de un contrato en ",(0,r.kt)("a",{parentName:"p",href:"https://remix.ethereum.org/"},(0,r.kt)("strong",{parentName:"a"},"Remix IDO")))),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"web3js",label:"web3.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Importaciones y Constantes"',title:'"Importaciones',y:!0,'Constantes"':!0},"import UniversalProfile from '@lukso/lsp-smart-contracts/artifacts/UniversalProfile.json';\nimport LSP6KeyManager from '@lukso/lsp-smart-contracts/artifacts/LSP6KeyManager.json';\nimport LSP9Vault from '@lukso/lsp-smart-contracts/artifacts/LSP9Vault.json';\nimport TargetContractABI from './TargetContractABI.json';\nimport Web3 from 'web3';\n\nconst web3 = new Web3('https://rpc.l16.lukso.network');\nconst universalProfileAddress = '0x...';\nconst vaultAddress = '0x...';\nconst targetContractAddress = '0x...';\n\n// configura la EOA\nconst privateKey = '0x...'; // tu clave privada EOA (direcci\xf3n del controlador)\nconst myEOA = web3.eth.accounts.wallet.add(privateKey);\n"))),(0,r.kt)(s.Z,{value:"ethersjs",label:"ethers.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Importaciones y Constantes"',title:'"Importaciones',y:!0,'Constantes"':!0},"import UniversalProfile from '@lukso/lsp-smart-contracts/artifacts/UniversalProfile.json';\nimport LSP6KeyManager from '@lukso/lsp-smart-contracts/artifacts/LSP6KeyManager.json';\nimport LSP9Vault from '@lukso/lsp-smart-contracts/artifacts/LSP9Vault.json';\nimport TargetContractABI from './TargetContractABI.json';\nimport { ethers } from 'ethers';\n\nconst provider = new ethers.JsonRpcProvider('https://rpc.l16.lukso.network');\nconst universalProfileAddress = '0x...';\nconst vaultAddress = '0x...';\nconst targetContractAddress = '0x...';\n\n// configura la EOA\nconst privateKey = '0x...'; // tu clave privada EOA (direcci\xf3n del controlador)\nconst myEOA = new ethers.Wallet(privateKey).connect(provider);\n")))),(0,r.kt)("h2",{id:"paso-2---crear-las-instancias-de-los-contratos"},"Paso 2 - Crear las instancias de los contratos"),(0,r.kt)("p",null,"A continuaci\xf3n crearemos instancias para nuestros contratos"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Crea una instancia de contrato de Perfil Universal a partir de ",(0,r.kt)("inlineCode",{parentName:"li"},"universalProfileAddress"),"."),(0,r.kt)("li",{parentName:"ul"},"Consigue el ",(0,r.kt)("inlineCode",{parentName:"li"},"owner()")," del Perfil Universal."),(0,r.kt)("li",{parentName:"ul"},"Crea una instancia de contrato Gestor de Claves a partir del propietario del Perfil Universal."),(0,r.kt)("li",{parentName:"ul"},"Crea una instancia de contrato de destino a partir de la direcci\xf3n ",(0,r.kt)("inlineCode",{parentName:"li"},"targetContractAddress"),".")),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"web3js",label:"web3.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Instancias de Contratos"',title:'"Instancias',de:!0,'Contratos"':!0},"// Crea una instancia de contrato de Perfil Universal\nconst universalProfile = new web3.eth.Contract(\n  UniversalProfile.abi,\n  universalProfileAddress,\n);\n// Obt\xe9n al propietario del Perfil Universal\nconst keyManagerAddress = await universalProfile.methods.owner().call();\n// Crear instancia de contrato de Gestor de Claves LSP6\nconst keyManager = new web3.eth.Contract(LSP6KeyManager.abi, keyManagerAddress);\n// Crear instancia de contrato B\xf3veda LSP9\nconst vault = new web3.eth.Contract(LSP9Vault.abi, vaultAddress);\n// Crear instancia de contrato de Contrato de Destino\nconst targetContract = new web3.eth.Contract(\n  TargetContractABI,\n  targetContractAddress,\n);\n"))),(0,r.kt)(s.Z,{value:"ethersjs",label:"ethers.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Instancias de Contratos"',title:'"Instancias',de:!0,'Contratos"':!0},"// Crea una instancia de contrato de Perfil Universal\nconst universalProfile = new ethers.Contract(\n  universalProfileAddress,\n  UniversalProfile.abi,\n);\n// Obt\xe9n al propietario del Perfil Universal\nconst keyManagerAddress = await universalProfile.owner();\n// Crear instancia de contrato de Gestor de Claves LSP6\nconst keyManager = new ethers.Contract(keyManagerAddress, LSP6KeyManager.abi);\n// Crear instancia de contrato B\xf3veda LSP9\nconst vault = new ethers.Contract(vaultAddress, LSP9Vault.abi);\n// Crear instancia de contrato de Contrato de Destino\nconst targetContract = new ethers.Contract(\n  targetContractAddress,\n  TargetContractABI,\n);\n")))),(0,r.kt)("h2",{id:"step-3---encode-the-calldatas"},"Step 3 - Encode the calldatas"),(0,r.kt)("p",null,"This is the easy part, we need to create 2 calldatas:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("em",{parentName:"li"},"first calldata")," will be executed on the Target Contract."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("em",{parentName:"li"},"second calldata")," will be executed on the Vault and will trigger the ",(0,r.kt)("em",{parentName:"li"},"first calldata"),"."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("em",{parentName:"li"},"third calldata")," will be executed on the Universal Profile and will trigger the ",(0,r.kt)("em",{parentName:"li"},"second calldata"),".")),(0,r.kt)("h3",{id:"cifrar-los-calldata-del-contrato-de-destino"},"Cifrar los calldata del Contrato de Destino"),(0,r.kt)("p",null,"Cifrar los calldata que se ejecutar\xe1n en el Contrato de Destino."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"web3js",label:"web3.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="calldata de Destino"',title:'"calldata',de:!0,'Destino"':!0},"// 1. cifrar los calldata a ejecutar en el targetContract\n// suponiendo que targetContract sea una instancia de Contrato\nconst targetCalldata = targetContract.methods\n  .myCoolfunction('dummyParameter')\n  .encodeABI();\n"))),(0,r.kt)(s.Z,{value:"ethersjs",label:"ethers.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="calldata de Destino"',title:'"calldata',de:!0,'Destino"':!0},"// 1. cifrar los calldata a ejecutar en el targetContract\n// suponiendo que targetContract sea una instancia de Contrato\nconst targetCalldata = targetContract.interface.encodeFunctionData(\n  'myCoolfunction',\n  ['dummyParameter'],\n);\n")))),(0,r.kt)("h3",{id:"cifrar-los-calldata-de-la-b\xf3veda"},"Cifrar los calldata de la B\xf3veda"),(0,r.kt)("p",null,"Cifrar los calldata que se ejecutar\xe1n en la B\xf3veda. Estos calldata tambi\xe9n activar\xe1n los calldata que se ejecutar\xe1n en el Contrato de Destino."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"web3js",label:"web3.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="calldata de la B\xf3veda"',title:'"calldata',de:!0,la:!0,'B\xf3veda"':!0},"// 2. cifrar los calldata a ejecutar en la B\xf3veda,\n// pasando los calldata a ejecutarse en el targetContract como 4\xba par\xe1metro\nconst vaultCalldata = await vault.methods[\n  'execute(uint256,address,uint256,bytes)'\n](0, targetContract.address, 0, targetCalldata).encodeABI();\n"))),(0,r.kt)(s.Z,{value:"ethersjs",label:"ethers.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="calldata de la B\xf3veda"',title:'"calldata',de:!0,la:!0,'B\xf3veda"':!0},"// 2. cifrar los calldata a ejecutar en la B\xf3veda,\n// pasando los calldata a ejecutarse en el targetContract como 4\xba par\xe1metro\nconst vaultCalldata = vault.interface.encodeFunctionData(\n  'execute(uint256,address,uint256,bytes)',\n  [0, targetContract.address, 0, targetCalldata],\n);\n")))),(0,r.kt)("h3",{id:"cifrar-calldata-de-perfil-universal"},"Cifrar calldata de Perfil Universal"),(0,r.kt)("p",null,"Cifrar los calldata que se ejecutar\xe1n en el Perfil Universal. Estos calldata tambi\xe9n activar\xe1n los calldata que se ejecutar\xe1n en la B\xf3veda."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"web3js",label:"web3.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="calldata de Perfil Universal"',title:'"calldata',de:!0,Perfil:!0,'Universal"':!0},"// 3. cifrar los calldata a ejecutarse en el UP,\n// pasando los calldata a ejecutarse en la B\xf3veda como 4\xba par\xe1metro\nconst universalProfileCalldata = await universalProfile.methods[\n  'execute(uint256,address,uint256,bytes)'\n](0, vaultAddress, 0, vaultCalldata).encodeABI();\n"))),(0,r.kt)(s.Z,{value:"ethersjs",label:"ethers.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="calldata de Perfil Universal"',title:'"calldata',de:!0,Perfil:!0,'Universal"':!0},"// 3. cifrar los calldata a ejecutarse en el UP,\n// pasando los calldata a ejecutarse en la B\xf3veda como 4\xba par\xe1metro\nconst universalProfileCalldata = universalProfile.interface.encodeFunctionData(\n  'execute(uint256,address,uint256,bytes)',\n  [0, vaultAddress, 0, vaultCalldata],\n);\n")))),(0,r.kt)("h2",{id:"paso-4---ejecutar-a-trav\xe9s-del-gestor-de-claves"},"Paso 4 - Ejecutar a trav\xe9s del Gestor de Claves"),(0,r.kt)("p",null,"El paso final es pasar los calldata cifrados al Gestor de Claves. Como estamos llamando desde la direcci\xf3n de un controlador de UP (con los ","[",(0,r.kt)("strong",{parentName:"p"},"permisos"),"]"," adecuados(../../standards/universal-profile/lsp6-key-manager.md#permissions)), el Gestor de Claves autorizar\xe1 y ejecutar\xe1 la transacci\xf3n."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"web3js",label:"web3.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Enviar transacci\xf3n"',title:'"Enviar','transacci\xf3n"':!0},"// Ejecutar a trav\xe9s del Gestor de Claves, pasando los calldata del UP\nawait keyManager.methods['execute(bytes)'](universalProfileCalldata).send({\n  from: myEOA.address,\n  gasLimit: 600_000,\n});\n"))),(0,r.kt)(s.Z,{value:"ethersjs",label:"ethers.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Enviar transacci\xf3n"',title:'"Enviar','transacci\xf3n"':!0},"// Ejecutar a trav\xe9s del Gestor de Claves, pasando los calldata del UP\nawait keyManager.connect(myEOA)['execute(bytes)'](universalProfileCalldata);\n")))),(0,r.kt)("h2",{id:"c\xf3digo-final"},"C\xf3digo final"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"web3js",label:"web3.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Interactuar con otros contratos a trav\xe9s de la b\xf3veda"',title:'"Interactuar',con:!0,otros:!0,contratos:!0,a:!0,"trav\xe9s":!0,de:!0,la:!0,'b\xf3veda"':!0},"import UniversalProfile from '@lukso/lsp-smart-contracts/artifacts/UniversalProfile.json';\nimport LSP6KeyManager from '@lukso/lsp-smart-contracts/artifacts/LSP6KeyManager.json';\nimport LSP9Vault from '@lukso/lsp-smart-contracts/artifacts/LSP9Vault.json';\nimport TargetContractABI from './TargetContractABI.json';\nimport Web3 from 'web3';\n\nconst web3 = new Web3('https://rpc.l16.lukso.network');\nconst universalProfileAddress = '0x...';\nconst vaultAddress = '0x...';\nconst targetContractAddress = '0x...';\n\n// configura la EOA\nconst privateKey = '0x...'; // tu clave privada EOA (direcci\xf3n del controlador)\nconst myEOA = web3.eth.accounts.wallet.add(privateKey);\n\n// Crea una instancia de contrato de Perfil Universal\nconst universalProfile = new web3.eth.Contract(\n  UniversalProfile.abi,\n  universalProfileAddress,\n);\n// Obt\xe9n al propietario del Perfil Universal\nconst keyManagerAddress = await universalProfile.methods.owner().call();\n// Crear instancia de contrato de Gestor de Claves LSP6\nconst keyManager = new web3.eth.Contract(LSP6KeyManager.abi, keyManagerAddress);\n// Crear instancia de contrato B\xf3veda LSP9\nconst vault = new web3.eth.Contract(LSP9Vault.abi, vaultAddress);\n// Crear instancia de contrato de Contrato de Destino\nconst targetContract = new web3.eth.Contract(\n  TargetContractABI,\n  targetContractAddress,\n);\n\n// 1. cifrar los calldata a ejecutar en el targetContract\n// suponiendo que targetContract sea una instancia de Contrato\nconst targetCalldata = targetContract.methods\n  .myCoolfunction('dummyParameter')\n  .encodeABI();\n\n// 2. cifrar los calldata a ejecutar en la B\xf3veda,\n// pasando los calldata a ejecutarse en el targetContract como 4\xba par\xe1metro\nconst vaultCalldata = await vault.methods[\n  'execute(uint256,address,uint256,bytes)'\n](0, targetContract.address, 0, targetCalldata).encodeABI();\n\n// 3. cifrar los calldata a ejecutarse en el UP,\n// pasando los calldata a ejecutarse en la B\xf3veda como 4\xba par\xe1metro\nconst universalProfileCalldata = await universalProfile.methods[\n  'execute(uint256,address,uint256,bytes)'\n](0, vaultAddress, 0, vaultCalldata).encodeABI();\n\n// Ejecutar a trav\xe9s del Gestor de Claves, pasando los calldata del UP\nawait keyManager.methods['execute(bytes)'](universalProfileCalldata).send({\n  from: myEOA.address,\n  gasLimit: 600_000,\n});\n"))),(0,r.kt)(s.Z,{value:"ethersjs",label:"ethers.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Interactuar con otros contratos a trav\xe9s de la b\xf3veda"',title:'"Interactuar',con:!0,otros:!0,contratos:!0,a:!0,"trav\xe9s":!0,de:!0,la:!0,'b\xf3veda"':!0},"import UniversalProfile from '@lukso/lsp-smart-contracts/artifacts/UniversalProfile.json';\nimport LSP6KeyManager from '@lukso/lsp-smart-contracts/artifacts/LSP6KeyManager.json';\nimport LSP9Vault from '@lukso/lsp-smart-contracts/artifacts/LSP9Vault.json';\nimport TargetContractABI from './TargetContractABI.json';\nimport { ethers } from 'ethers';\n\nconst provider = new ethers.JsonRpcProvider('https://rpc.l16.lukso.network');\nconst universalProfileAddress = '0x...';\nconst vaultAddress = '0x...';\nconst targetContractAddress = '0x...';\n\n// configura la EOA\nconst privateKey = '0x...'; // tu clave privada EOA (direcci\xf3n del controlador)\nconst myEOA = new ethers.Wallet(privateKey).connect(provider);\n\n// Crea una instancia de contrato de Perfil Universal\nconst universalProfile = new ethers.Contract(\n  universalProfileAddress,\n  UniversalProfile.abi,\n);\n// Obt\xe9n al propietario del Perfil Universal\nconst keyManagerAddress = await universalProfile.owner();\n// Crear instancia de contrato de Gestor de Claves LSP6\nconst keyManager = new ethers.Contract(keyManagerAddress, LSP6KeyManager.abi);\n// Crear instancia de contrato B\xf3veda LSP9\nconst vault = new ethers.Contract(vaultAddress, LSP9Vault.abi);\n// Crear instancia de contrato de Contrato de Destino\nconst targetContract = new ethers.Contract(\n  targetContractAddress,\n  TargetContractABI,\n);\n\n// 1. cifrar los calldata a ejecutar en el targetContract\n// suponiendo que targetContract sea una instancia de Contrato\nconst targetCalldata = targetContract.interface.encodeFunctionData(\n  'myCoolfunction',\n  ['dummyParameter'],\n);\n\n// 2. cifrar los calldata a ejecutar en la B\xf3veda,\n// pasando los calldata a ejecutarse en el targetContract como 4\xba par\xe1metro\nconst vaultCalldata = vault.interface.encodeFunctionData(\n  'execute(uint256,address,uint256,bytes)',\n  [0, targetContract.address, 0, targetCalldata],\n);\n\n// 3. cifrar los calldata a ejecutarse en el UP,\n// pasando los calldata a ejecutarse en la B\xf3veda como 4\xba par\xe1metro\nconst universalProfileCalldata = universalProfile.interface.encodeFunctionData(\n  'execute(uint256,address,uint256,bytes)',\n  [0, vaultAddress, 0, vaultCalldata],\n);\n\n// Ejecutar a trav\xe9s del Gestor de Claves, pasando los calldata del UP\nawait keyManager.connect(myEOA)['execute(bytes)'](universalProfileCalldata);\n")))),(0,r.kt)("p",null,"En el fragmento de c\xf3digo anterior, interactuamos con la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"myCoolfunction(..)")," en el contrato ",(0,r.kt)("strong",{parentName:"p"},"targetContract")," a trav\xe9s de la funci\xf3n ",(0,r.kt)("a",{parentName:"p",href:"/lukso-es/es/standards/smart-contracts/lsp9-vault#execute"},"execute")," de la B\xf3veda. La llamada se cifr\xf3 y ejecut\xf3 a trav\xe9s del Perfil Universal y el Gestor de Claves."))}m.isMDXComponent=!0},8509:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/interact-with-contract-using-vaults-flow-471302f35d2a774dcfdd52d2a6407937.jpg"}}]);